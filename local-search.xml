<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Sql练习</title>
    <link href="/2021/11/01/mysql_Sql_Learn/"/>
    <url>/2021/11/01/mysql_Sql_Learn/</url>
    
    <content type="html"><![CDATA[<p>Sql语句练习</p><span id="more"></span><h1 id="Mysql-练习题"><a href="#Mysql-练习题" class="headerlink" title="Mysql 练习题"></a>Mysql 练习题</h1><p><strong>我使用的Mysql版本是5.7.19。答案可能会因版本会有少许出入</strong>。</p><h2 id="练习数据"><a href="#练习数据" class="headerlink" title="练习数据"></a>练习数据</h2><h3 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h3><p>–1.学生表<br>Student(SId,Sname,Sage,Ssex) </p><p>–SId 学生编号,Sname 学生姓名,Sage 出生年月,Ssex 学生性别</p><p>–2.课程表<br>Course(CId,Cname,TId)<br>–CId –课程编号,Cname 课程名称,TId 教师编号</p><p>–3.教师表<br>Teacher(TId,Tname)<br> –TId 教师编号,Tname 教师姓名</p><p>–4.成绩表<br>SC(SId,CId,score)<br> –SId 学生编号,CId 课程编号,score 分数</p><h3 id="创建测试数据"><a href="#创建测试数据" class="headerlink" title="创建测试数据"></a>创建测试数据</h3><blockquote><p>总的运行脚本</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> Navicat Premium Data Transfer</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> Source Server         : localhost</span><br><span class="hljs-comment"> Source Server Type    : MySQL</span><br><span class="hljs-comment"> Source Server Version : 80025</span><br><span class="hljs-comment"> Source Host           : localhost:3306</span><br><span class="hljs-comment"> Source Schema         : sql_exercise</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> Target Server Type    : MySQL</span><br><span class="hljs-comment"> Target Server Version : 80025</span><br><span class="hljs-comment"> File Encoding         : 65001</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> Date: 01/11/2021 17:45:49</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-keyword">SET</span> NAMES utf8mb4;<br><span class="hljs-keyword">SET</span> FOREIGN_KEY_CHECKS <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Table structure for course</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `course`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `course`  (<br>  `CId` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `Cname` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `TId` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span><br>) ENGINE <span class="hljs-operator">=</span> InnoDB <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> <span class="hljs-operator">=</span> utf8 <span class="hljs-keyword">COLLATE</span> <span class="hljs-operator">=</span> utf8_general_ci ROW_FORMAT <span class="hljs-operator">=</span> <span class="hljs-keyword">Dynamic</span>;<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Records of course</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `course` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-string">&#x27;语文&#x27;</span>, <span class="hljs-string">&#x27;02&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `course` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-string">&#x27;数学&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `course` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-string">&#x27;英语&#x27;</span>, <span class="hljs-string">&#x27;03&#x27;</span>);<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Table structure for sc</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `sc`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `sc`  (<br>  `SId` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `CId` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `score` <span class="hljs-type">decimal</span>(<span class="hljs-number">18</span>, <span class="hljs-number">1</span>) <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span><br>) ENGINE <span class="hljs-operator">=</span> InnoDB <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> <span class="hljs-operator">=</span> utf8 <span class="hljs-keyword">COLLATE</span> <span class="hljs-operator">=</span> utf8_general_ci ROW_FORMAT <span class="hljs-operator">=</span> <span class="hljs-keyword">Dynamic</span>;<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Records of sc</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-number">80.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-number">90.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-number">99.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-number">70.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-number">60.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-number">80.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-number">80.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-number">80.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-number">80.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;04&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-number">50.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;04&#x27;</span>, <span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-number">30.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;04&#x27;</span>, <span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-number">20.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;05&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-number">76.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;05&#x27;</span>, <span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-number">87.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;06&#x27;</span>, <span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-number">31.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;06&#x27;</span>, <span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-number">34.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;07&#x27;</span>, <span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-number">89.0</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `sc` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;07&#x27;</span>, <span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-number">98.0</span>);<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Table structure for student</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `student`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `student`  (<br>  `SId` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `Sname` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `Sage` datetime <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `Ssex` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span><br>) ENGINE <span class="hljs-operator">=</span> InnoDB <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> <span class="hljs-operator">=</span> utf8 <span class="hljs-keyword">COLLATE</span> <span class="hljs-operator">=</span> utf8_general_ci ROW_FORMAT <span class="hljs-operator">=</span> <span class="hljs-keyword">Dynamic</span>;<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Records of student</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-string">&#x27;赵雷&#x27;</span>, <span class="hljs-string">&#x27;1990-01-01 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-string">&#x27;钱电&#x27;</span>, <span class="hljs-string">&#x27;1990-12-21 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-string">&#x27;孙风&#x27;</span>, <span class="hljs-string">&#x27;1990-05-20 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;04&#x27;</span>, <span class="hljs-string">&#x27;李云&#x27;</span>, <span class="hljs-string">&#x27;1990-08-06 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;05&#x27;</span>, <span class="hljs-string">&#x27;周梅&#x27;</span>, <span class="hljs-string">&#x27;1991-12-01 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;06&#x27;</span>, <span class="hljs-string">&#x27;吴兰&#x27;</span>, <span class="hljs-string">&#x27;1992-03-01 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;07&#x27;</span>, <span class="hljs-string">&#x27;郑竹&#x27;</span>, <span class="hljs-string">&#x27;1989-07-01 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;09&#x27;</span>, <span class="hljs-string">&#x27;张三&#x27;</span>, <span class="hljs-string">&#x27;2017-12-20 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;10&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;2017-12-25 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;11&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>, <span class="hljs-string">&#x27;2017-12-30 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;12&#x27;</span>, <span class="hljs-string">&#x27;赵六&#x27;</span>, <span class="hljs-string">&#x27;2017-01-01 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `student` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;13&#x27;</span>, <span class="hljs-string">&#x27;孙七&#x27;</span>, <span class="hljs-string">&#x27;2018-01-01 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;女&#x27;</span>);<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Table structure for teacher</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `teacher`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `teacher`  (<br>  `TId` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `Tname` <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span><br>) ENGINE <span class="hljs-operator">=</span> InnoDB <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> <span class="hljs-operator">=</span> utf8 <span class="hljs-keyword">COLLATE</span> <span class="hljs-operator">=</span> utf8_general_ci ROW_FORMAT <span class="hljs-operator">=</span> <span class="hljs-keyword">Dynamic</span>;<br><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Records of teacher</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `teacher` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;01&#x27;</span>, <span class="hljs-string">&#x27;张三&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `teacher` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;02&#x27;</span>, <span class="hljs-string">&#x27;李四&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `teacher` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;03&#x27;</span>, <span class="hljs-string">&#x27;王五&#x27;</span>);<br><br><span class="hljs-keyword">SET</span> FOREIGN_KEY_CHECKS <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><br></code></pre></td></tr></table></figure><blockquote><p>各个表的运行脚本</p></blockquote><p>学生表 Student</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> Student(SId <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),Sname <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),Sage datetime,Ssex <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-string">&#x27;赵雷&#x27;</span> , <span class="hljs-string">&#x27;1990-01-01&#x27;</span> , <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-string">&#x27;钱电&#x27;</span> , <span class="hljs-string">&#x27;1990-12-21&#x27;</span> , <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-string">&#x27;孙风&#x27;</span> , <span class="hljs-string">&#x27;1990-05-20&#x27;</span> , <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;04&#x27;</span> , <span class="hljs-string">&#x27;李云&#x27;</span> , <span class="hljs-string">&#x27;1990-08-06&#x27;</span> , <span class="hljs-string">&#x27;男&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;05&#x27;</span> , <span class="hljs-string">&#x27;周梅&#x27;</span> , <span class="hljs-string">&#x27;1991-12-01&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;06&#x27;</span> , <span class="hljs-string">&#x27;吴兰&#x27;</span> , <span class="hljs-string">&#x27;1992-03-01&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;07&#x27;</span> , <span class="hljs-string">&#x27;郑竹&#x27;</span> , <span class="hljs-string">&#x27;1989-07-01&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;09&#x27;</span> , <span class="hljs-string">&#x27;张三&#x27;</span> , <span class="hljs-string">&#x27;2017-12-20&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;10&#x27;</span> , <span class="hljs-string">&#x27;李四&#x27;</span> , <span class="hljs-string">&#x27;2017-12-25&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;11&#x27;</span> , <span class="hljs-string">&#x27;李四&#x27;</span> , <span class="hljs-string">&#x27;2017-12-30&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;12&#x27;</span> , <span class="hljs-string">&#x27;赵六&#x27;</span> , <span class="hljs-string">&#x27;2017-01-01&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Student <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;13&#x27;</span> , <span class="hljs-string">&#x27;孙七&#x27;</span> , <span class="hljs-string">&#x27;2018-01-01&#x27;</span> , <span class="hljs-string">&#x27;女&#x27;</span>);<br></code></pre></td></tr></table></figure><p>科目表 Course</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> Course(CId <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),Cname nvarchar(<span class="hljs-number">10</span>),TId <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Course <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-string">&#x27;语文&#x27;</span> , <span class="hljs-string">&#x27;02&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Course <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-string">&#x27;数学&#x27;</span> , <span class="hljs-string">&#x27;01&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Course <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-string">&#x27;英语&#x27;</span> , <span class="hljs-string">&#x27;03&#x27;</span>);<br></code></pre></td></tr></table></figure><p>教师表 Teacher</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> Teacher(TId <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),Tname <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Teacher <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-string">&#x27;张三&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Teacher <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-string">&#x27;李四&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> Teacher <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-string">&#x27;王五&#x27;</span>);<br></code></pre></td></tr></table></figure><p>成绩表 SC</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> SC(SId <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),CId <span class="hljs-type">varchar</span>(<span class="hljs-number">10</span>),score <span class="hljs-type">decimal</span>(<span class="hljs-number">18</span>,<span class="hljs-number">1</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-number">80</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-number">90</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-number">99</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-number">70</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-number">60</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-number">80</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-number">80</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-number">80</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-number">80</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;04&#x27;</span> , <span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-number">50</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;04&#x27;</span> , <span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-number">30</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;04&#x27;</span> , <span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-number">20</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;05&#x27;</span> , <span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-number">76</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;05&#x27;</span> , <span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-number">87</span>); <br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;06&#x27;</span> , <span class="hljs-string">&#x27;01&#x27;</span> , <span class="hljs-number">31</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;06&#x27;</span> , <span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-number">34</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;07&#x27;</span> , <span class="hljs-string">&#x27;02&#x27;</span> , <span class="hljs-number">89</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> SC <span class="hljs-keyword">values</span>(<span class="hljs-string">&#x27;07&#x27;</span> , <span class="hljs-string">&#x27;03&#x27;</span> , <span class="hljs-number">98</span>);<br></code></pre></td></tr></table></figure><h2 id="练习题目"><a href="#练习题目" class="headerlink" title="练习题目"></a>练习题目</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>​    查询” 01 “课程比” 02 “课程成绩高的学生的信息及课程分数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span><br>t1.SId <span class="hljs-keyword">as</span> `学生id`,<br>t1.score <span class="hljs-keyword">as</span> `课程<span class="hljs-number">01</span>分数`,<br>t2.score <span class="hljs-keyword">as</span> `课程<span class="hljs-number">02</span>分数`<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> SId ,score <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> sc.CId<span class="hljs-operator">=</span><span class="hljs-string">&#x27;01&#x27;</span>)<span class="hljs-keyword">as</span> t1 , (<span class="hljs-keyword">select</span> SId ,score <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> sc.CId<span class="hljs-operator">=</span><span class="hljs-string">&#x27;02&#x27;</span>) <span class="hljs-keyword">as</span> t2<br><span class="hljs-keyword">where</span> t1.SId<span class="hljs-operator">=</span>t2.SId<br><span class="hljs-keyword">and</span>   t1.score<span class="hljs-operator">&gt;</span>t2.score<br></code></pre></td></tr></table></figure><p>1.1 查询同时存在” 01 “课程和” 02 “课程的情况</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span><br>t1.SId <span class="hljs-keyword">as</span> `学生id`,<br>t1.score <span class="hljs-keyword">as</span> `课程<span class="hljs-number">01</span>分数`,<br>t2.score <span class="hljs-keyword">as</span> `课程<span class="hljs-number">02</span>分数`<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> SId ,score <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> sc.CId<span class="hljs-operator">=</span><span class="hljs-string">&#x27;01&#x27;</span>)<span class="hljs-keyword">as</span> t1 , (<span class="hljs-keyword">select</span> SId ,score <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> sc.CId<span class="hljs-operator">=</span><span class="hljs-string">&#x27;02&#x27;</span>) <span class="hljs-keyword">as</span> t2<br><span class="hljs-keyword">where</span> t1.SId<span class="hljs-operator">=</span>t2.SId<br><br></code></pre></td></tr></table></figure><p>1.2 查询存在” 01 “课程但可能不存在” 02 “课程的情况(不存在时显示为 null )</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>t1.SId <span class="hljs-keyword">AS</span> `学生id`,<br>t1.score <span class="hljs-keyword">AS</span> `课程<span class="hljs-number">01</span>分数`,<br>t2.score <span class="hljs-keyword">AS</span> `课程<span class="hljs-number">02</span>分数` <br><span class="hljs-keyword">FROM</span><br>( <span class="hljs-keyword">SELECT</span> SId, score <span class="hljs-keyword">FROM</span> sc <span class="hljs-keyword">WHERE</span> sc.CId <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;01&#x27;</span> ) <span class="hljs-keyword">AS</span> t1<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> <br>( <span class="hljs-keyword">SELECT</span> SId, score <span class="hljs-keyword">FROM</span> sc <span class="hljs-keyword">WHERE</span> sc.CId <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;02&#x27;</span> ) <span class="hljs-keyword">AS</span> t2 <br><span class="hljs-keyword">ON</span> <br>t1.SId <span class="hljs-operator">=</span> T2.SId<br></code></pre></td></tr></table></figure><p>1.3 查询不存在” 01 “课程但存在” 02 “课程的情况</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br>SId,<br>CId <span class="hljs-keyword">as</span> `课程序号`,<br>score <span class="hljs-keyword">AS</span> `<span class="hljs-number">02</span>课程成绩`<br><span class="hljs-keyword">FROM</span><br>sc <br><span class="hljs-keyword">WHERE</span> <br>sc.SId <span class="hljs-keyword">Not</span> <span class="hljs-keyword">in</span> (<span class="hljs-keyword">SELECT</span> SId <span class="hljs-keyword">FROM</span> sc <span class="hljs-keyword">WHERE</span> sc.CId <span class="hljs-operator">=</span> <span class="hljs-number">01</span>)<br><span class="hljs-keyword">and</span> sc.CId <span class="hljs-operator">=</span> <span class="hljs-number">02</span><br></code></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br>student.<span class="hljs-operator">*</span>,<br>avgScore <br><span class="hljs-keyword">FROM</span><br>student<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> (<br><span class="hljs-keyword">SELECT</span><br>sc.SId,<br><span class="hljs-built_in">AVG</span>( sc.score ) <span class="hljs-keyword">AS</span> avgScore <br><span class="hljs-keyword">FROM</span><br>sc <br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span><br>sc.SId <br><span class="hljs-keyword">HAVING</span><br><span class="hljs-built_in">AVG</span>( sc.score ) <span class="hljs-operator">&gt;=</span> <span class="hljs-number">60</span> <br>) <span class="hljs-keyword">AS</span> t1 <br><span class="hljs-keyword">WHERE</span><br>t1.SId <span class="hljs-operator">=</span> student.SId<br></code></pre></td></tr></table></figure><h3 id="3-查询在-SC-表存在成绩的学生信息"><a href="#3-查询在-SC-表存在成绩的学生信息" class="headerlink" title="3.查询在 SC 表存在成绩的学生信息"></a>3.查询在 SC 表存在成绩的学生信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br> <span class="hljs-keyword">DISTINCT</span> student.<span class="hljs-operator">*</span> <br><span class="hljs-keyword">FROM</span><br>student, sc<br><span class="hljs-keyword">WHERE</span><br>student.SId <span class="hljs-operator">=</span> sc.SId<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br> student.<span class="hljs-operator">*</span> <br><span class="hljs-keyword">FROM</span><br>student<br><span class="hljs-keyword">WHERE</span><br>student.SId <span class="hljs-keyword">in</span> (<span class="hljs-keyword">SELECT</span> SId <span class="hljs-keyword">FROM</span> sc)<br><br></code></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩(没成绩的显示为null)  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br>student.<span class="hljs-operator">*</span>,<br>sco.courseSum,<br>sco.scoreSum <br><span class="hljs-keyword">FROM</span><br>student<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> (<br><span class="hljs-keyword">SELECT</span><br>sc.SId,<br><span class="hljs-built_in">COUNT</span>( sc.CId ) <span class="hljs-keyword">AS</span> courseSum,<br><span class="hljs-built_in">SUM</span>( sc.score ) <span class="hljs-keyword">AS</span> scoreSum <br><span class="hljs-keyword">FROM</span><br>sc <br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span><br>sc.SId <br>) <span class="hljs-keyword">AS</span> sco <br><span class="hljs-keyword">WHERE</span><br>student.SId <span class="hljs-operator">=</span> sco.SId                                         <br></code></pre></td></tr></table></figure><p>4.1 查有成绩的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br>student.<span class="hljs-operator">*</span> <br><span class="hljs-keyword">FROM</span><br>student <br><span class="hljs-keyword">WHERE</span><br><span class="hljs-keyword">EXISTS</span> (<span class="hljs-keyword">SELECT</span> sc.SId <span class="hljs-keyword">FROM</span> sc <span class="hljs-keyword">WHERE</span> sc.SId <span class="hljs-operator">=</span> student.SId) <br><br></code></pre></td></tr></table></figure><h3 id="5-查询「李」姓老师的数量"><a href="#5-查询「李」姓老师的数量" class="headerlink" title="5.查询「李」姓老师的数量"></a>5.查询「李」姓老师的数量</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br><span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>)<br><span class="hljs-keyword">FROM</span><br>teacher<br><span class="hljs-keyword">WHERE</span> <br>teacher.Tname <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;李%&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="6-查询学过「张三」老师授课的同学的信息"><a href="#6-查询学过「张三」老师授课的同学的信息" class="headerlink" title="6.查询学过「张三」老师授课的同学的信息"></a>6.查询学过「张三」老师授课的同学的信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <br>student.<span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span><br>student, sc, course, teacher<br><span class="hljs-keyword">WHERE</span><br>student.SId <span class="hljs-operator">=</span> sc.SId<br><span class="hljs-keyword">AND</span><br>sc.CId <span class="hljs-operator">=</span> course.CId<br><span class="hljs-keyword">AND</span><br>course.TId <span class="hljs-operator">=</span> teacher.TId<br><span class="hljs-keyword">AND</span><br>teacher.Tname <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;张三&#x27;</span><br><br></code></pre></td></tr></table></figure><h3 id="7-查询没有学全所有课程的同学的信息"><a href="#7-查询没有学全所有课程的同学的信息" class="headerlink" title="7.查询没有学全所有课程的同学的信息"></a>7.查询没有学全所有课程的同学的信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span><br>student.<span class="hljs-operator">*</span> <br><span class="hljs-keyword">FROM</span><br>( <span class="hljs-keyword">SELECT</span> student.SId, course.CId <span class="hljs-keyword">FROM</span> student, course ) <span class="hljs-keyword">AS</span> t1<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> ( <span class="hljs-keyword">SELECT</span> sc.SId, sc.CId <span class="hljs-keyword">FROM</span> sc ) <span class="hljs-keyword">AS</span> t2 <span class="hljs-keyword">ON</span> t1.SId <span class="hljs-operator">=</span> t2.SId <br><span class="hljs-keyword">AND</span> t1.CId <span class="hljs-operator">=</span> t2.CId,<br>student <br><span class="hljs-keyword">WHERE</span><br>t2.SId <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span> <br><span class="hljs-keyword">AND</span> t1.SId <span class="hljs-operator">=</span> student.SId<br></code></pre></td></tr></table></figure><h3 id="8"><a href="#8" class="headerlink" title="8."></a>8.</h3><p>查询至少有一门课与学号为” 01 “的同学所学相同的同学的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span><br><span class="hljs-keyword">DISTINCT</span> student.<span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span><br>student, sc<br><span class="hljs-keyword">WHERE</span><br>student.SId <span class="hljs-operator">=</span> sc.SId<br><span class="hljs-keyword">and</span><br>sc.CId <span class="hljs-keyword">in</span> (<span class="hljs-keyword">SELECT</span> CId <span class="hljs-keyword">FROM</span> sc <span class="hljs-keyword">WHERE</span> sc.SId <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;01&#x27;</span>)<br><span class="hljs-keyword">and</span><br>student.SId <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;01&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="9"><a href="#9" class="headerlink" title="9."></a>9.</h3><p>查询和” 01 “号的同学学习的课程完全相同的其他同学的信息 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">select</span> <span class="hljs-keyword">DISTINCT</span> student.<span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> (<br><span class="hljs-keyword">select</span> student.SId,t.CId<br><span class="hljs-keyword">from</span> student ,(<span class="hljs-keyword">select</span> sc.CId <span class="hljs-keyword">from</span> sc <span class="hljs-keyword">where</span> sc.SId<span class="hljs-operator">=</span><span class="hljs-string">&#x27;01&#x27;</span>) <span class="hljs-keyword">as</span> t) <span class="hljs-keyword">as</span> t1 <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> sc <span class="hljs-keyword">on</span> t1.SId<span class="hljs-operator">=</span>sc.SId <span class="hljs-keyword">and</span> t1.CId<span class="hljs-operator">=</span>sc.CId,student<br><span class="hljs-keyword">where</span> sc.SId <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> <br><span class="hljs-keyword">and</span>   t1.SId<span class="hljs-operator">=</span>student.SId<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>learnJava</title>
    <link href="/2021/10/29/learnJava/"/>
    <url>/2021/10/29/learnJava/</url>
    
    <content type="html"><![CDATA[<p>Java</p><span id="more"></span><h2 id="mybatis"><a href="#mybatis" class="headerlink" title="mybatis"></a>mybatis</h2><h3 id="1-mybatis逆向生成工具"><a href="#1-mybatis逆向生成工具" class="headerlink" title="1.mybatis逆向生成工具"></a>1.mybatis逆向生成工具</h3><p>mybatis通用生成工具</p><p>maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-comment">&lt;!-- 通用mapper逆向工具 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>tk.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.1.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以借助mybatis逆序生成工具 生成pojo类 mapper文件</p><h3 id="2-使用包下的类来简化查询"><a href="#2-使用包下的类来简化查询" class="headerlink" title="2.使用包下的类来简化查询"></a>2.使用包下的类来简化查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">Example userExample = <span class="hljs-keyword">new</span> Example(Users.class);<br>Example.Criteria userCriteria = userExample.createCriteria();<br>userCriteria.andEqualTo(<span class="hljs-string">&quot;username&quot;</span>, username);<br>Users result = usersMapper.selectOneByExample(userExample);<br></code></pre></td></tr></table></figure><h3 id="3-数据脱敏"><a href="#3-数据脱敏" class="headerlink" title="3.数据脱敏"></a>3.数据脱敏</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">MD5Utils.getMD5(password);<br></code></pre></td></tr></table></figure><blockquote><p>将密码通过md5加密存入数据库</p><p>登陆时,将用户输入的密码进行MD5加密,与数据库中的值进行比较</p></blockquote><h3 id="4-mybatis分页插件"><a href="#4-mybatis分页插件" class="headerlink" title="4.mybatis分页插件"></a>4.mybatis分页插件</h3><blockquote><p>原生分页</p><p>按价格排序</p><p>第一页按价格升序,之后第二页价格排序的结果和之前那一页商品价格没有完全对应上</p><p>前一页和后一页的商品价格没有对应上</p></blockquote><h3 id="5-分页插件的bug"><a href="#5-分页插件的bug" class="headerlink" title="5.分页插件的bug"></a>5.分页插件的bug</h3><blockquote><p>mybatis-pagehelper 分页插件不支持嵌套结果映射</p><p>由于嵌套结果方式会导致结果集被折叠,因此分页查询的结果在折叠后总数会减少,所以无法保证分页结果数量正确</p></blockquote><p>1.解决</p><pre><code>&gt;查询所有id之后,将pageSize个数的 id 传递给后端,由后端查询数据,返回给前端</code></pre><p> 2.解决</p><blockquote><p>mybatis自己内部解决,嵌套</p><p>将一整个sql 进行拆分,拆分为多个sql进行查询</p><p>修改mapper.xml文件中的sql语句</p></blockquote><blockquote><p>在 OrdersMapperCustom.xml 中有第2种解决方案</p></blockquote><h3 id="6-模糊查询"><a href="#6-模糊查询" class="headerlink" title="6.模糊查询"></a>6.模糊查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">/*mapper.xml文件中要这样写*/</span><br><br><span class="hljs-operator">&lt;</span>if test<span class="hljs-operator">=</span>&quot;paramsMap.keywords != null&quot;<span class="hljs-operator">&gt;</span><br>                <span class="hljs-keyword">and</span> i.item_name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%$&#123;paramsMap.keywords&#125;$%&#x27;</span><br><span class="hljs-operator">&lt;</span><span class="hljs-operator">/</span>if<span class="hljs-operator">&gt;</span><br></code></pre></td></tr></table></figure><p>mapper.xml 多条件查询</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs XML">order by<br>       <span class="hljs-comment">&lt;!--k: 默认,代表默认排序,根据name </span><br><span class="hljs-comment">       c: 根据销量排序</span><br><span class="hljs-comment">       p: 根据价格排序</span><br><span class="hljs-comment">       --&gt;</span><br><span class="hljs-symbol">&amp;quot;</span> <span class="hljs-symbol">&amp;quot;</span> <br>&lt; 转义&#x27;&#x27; 符号 , 有可能报错/&gt;<br><span class="hljs-tag">&lt;<span class="hljs-name">choose</span>&gt;</span><br>               <br>         <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;paramsMap.sort == <span class="hljs-symbol">&amp;quot;</span>c<span class="hljs-symbol">&amp;quot;</span>&quot;</span>&gt;</span><br>             i.sell_counts desc<br>         <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;paramsMap.sort == <span class="hljs-symbol">&amp;quot;</span>p<span class="hljs-symbol">&amp;quot;</span>&quot;</span>&gt;</span><br>               tempSpec.priceDiscount asc<br>          <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">otherwise</span>&gt;</span><br>              i.item_name asc<br>          <span class="hljs-tag">&lt;/<span class="hljs-name">otherwise</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">choose</span>&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">     &lt;choose&gt;</span><br><span class="hljs-comment">               </span><br><span class="hljs-comment">         &lt;when test=&quot;paramsMap.sort == &#x27;c&#x27;&quot;&gt;</span><br><span class="hljs-comment">             i.sell_counts desc</span><br><span class="hljs-comment">         &lt;/when&gt;</span><br><span class="hljs-comment">            &lt;when test=&quot;paramsMap.sort == &#x27;p&#x27;&quot;&gt;</span><br><span class="hljs-comment">               tempSpec.priceDiscount asc</span><br><span class="hljs-comment">          &lt;/when&gt;</span><br><span class="hljs-comment">          &lt;otherwise&gt;</span><br><span class="hljs-comment">              i.item_name asc</span><br><span class="hljs-comment">          &lt;/otherwise&gt;</span><br><span class="hljs-comment">    &lt;/choose&gt; --&gt;</span><br></code></pre></td></tr></table></figure><h3 id="7-xml文件-“-号的转义"><a href="#7-xml文件-“-号的转义" class="headerlink" title="7. xml文件 “ 号的转义"></a>7. xml文件 “ 号的转义</h3><blockquote><p>xml文件中 “” 转义</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;paramsMap.sort == <span class="hljs-symbol">&amp;quot;</span>c<span class="hljs-symbol">&amp;quot;</span>&quot;</span>&gt;</span><br>    i.sell_counts desc<br><span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这样写会报错</p><p>java.lang.NumberFormatException: For input string: “k”</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;paramsMap.sort == &#x27;c&#x27; &quot;</span>&gt;</span><br>    i.sell_counts desc<br><span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>模糊查询时的书写 用$符号取值 而不是 # 号</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;paramsMap.keywords != null and paramsMap.keywords != &#x27;&#x27; &quot;</span>&gt;</span><br>   and i.item_name like &#x27;%$&#123;paramsMap.keywords&#125;%&#x27;<br><span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>mybatis-pagehelper</p></blockquote><ol><li><p>引入分页插件依赖</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-comment">&lt;!--mybatis-pagehelper 实现分页 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.pagehelper<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>配置application.yml配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs YML"><span class="hljs-attr">pagehelper:</span><br><span class="hljs-attr">helperDialect:</span> <span class="hljs-string">mysql</span><br><span class="hljs-attr">supportMethodsArguments:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>用分页插件，在查询前使用分页插件，原理：统一拦截sql，为其提供分页功能</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-comment">/**</span><br><span class="hljs-comment">* page: 第几页</span><br><span class="hljs-comment">* pageSize: 每页显示条数</span><br><span class="hljs-comment">*/</span><br>PageHelper.startPage(page, pageSize);<br></code></pre></td></tr></table></figure></li><li><p>页数据封装到 PagedGridResult.java 传给前端</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">PageInfo&lt;?&gt; pageList = <span class="hljs-keyword">new</span> PageInfo&lt;&gt;(list);<br>PagedGridResult grid = <span class="hljs-keyword">new</span> PagedGridResult();<br>grid.setPage(page);<br>grid.setRows(list);<br>grid.setTotal(pageList.getPages());<br>grid.setRecords(pageList.getTotal());<br></code></pre></td></tr></table></figure></li></ol><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p><img src="learnJava.assets/image-20211029230023380.png" alt="image-20211029230023380"></p><p>前端端口 8080 到 后端端口8088 不一致 , 会产生跨域问题 ,</p><p>写一个配置类 注册到spring</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.tho.config;<br><br><br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.web.cors.CorsConfiguration;<br><span class="hljs-keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;<br><span class="hljs-keyword">import</span> org.springframework.web.filter.CorsFilter;<br><br><span class="hljs-comment">// 配置跨域问题</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CorsConfig</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">CorsConfig</span><span class="hljs-params">()</span> </span>&#123;<br><br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Author</span> tho</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Date</span> 2021/10/29 23:28</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span></span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Return</span> CorsFilter</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Description</span>: 配置跨域</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> CorsFilter <span class="hljs-title">corsFilter</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-comment">// 1.添加cors配置信息</span><br>        CorsConfiguration config = <span class="hljs-keyword">new</span> CorsConfiguration();<br><br>        config.addAllowedOrigin(<span class="hljs-string">&quot;http://localhost:8080&quot;</span>);<br><br>        <span class="hljs-comment">// 设置是否发送 cookie信息</span><br>        config.setAllowCredentials(<span class="hljs-keyword">true</span>);<br><br>        <span class="hljs-comment">// 设置允许请求的方式</span><br>        config.addAllowedMethod(<span class="hljs-string">&quot;*&quot;</span>);<br><br>        <span class="hljs-comment">// 设置允许的header</span><br>        config.addAllowedHeader(<span class="hljs-string">&quot;*&quot;</span>);<br><br>        <span class="hljs-comment">// 2.为url添加映射路径</span><br>        UrlBasedCorsConfigurationSource corsSource = <span class="hljs-keyword">new</span> UrlBasedCorsConfigurationSource();<br>        corsSource.registerCorsConfiguration (<span class="hljs-string">&quot;/**&quot;</span>, config);<br><br>        <span class="hljs-comment">// 3.返回重新定义好的corsSource</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> CorsFilter(corsSource);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="cookie-amp-session"><a href="#cookie-amp-session" class="headerlink" title="cookie&amp;session"></a>cookie&amp;session</h2><blockquote><p>cookie </p><ul><li><p>以键值对的形式存储信息在浏览器</p></li><li><p>cookie不能跨域,当前及其父级域名可以取值</p></li><li><p>cookie可以设置有效期</p></li><li><p>cookie可以设置path</p></li></ul></blockquote><blockquote><p>session</p><ul><li>基于服务器内存的缓存(非持久化),可保持请求会话</li><li>每个session通过sessionid来区分不同请求</li><li>session可以设置过期时间</li><li>session也是以键值对存在的</li></ul></blockquote><h2 id="springboot配置日志"><a href="#springboot配置日志" class="headerlink" title="springboot配置日志"></a>springboot配置日志</h2><p>依赖</p><ul><li>springboot-starter 和 springboot-web都要屏蔽自带的日志框架</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs XML"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--使用自定义日志框架 屏蔽自带的日志框架--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--使用自定义日志框架 屏蔽自带的日志框架--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 打包war [2] 移除自带内置tomcat --&gt;</span><br>            <span class="hljs-comment">&lt;!--&lt;exclusions&gt;</span><br><span class="hljs-comment">                &lt;exclusion&gt;</span><br><span class="hljs-comment">                    &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;</span><br><span class="hljs-comment">                    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="hljs-comment">                &lt;/exclusion&gt;</span><br><span class="hljs-comment">            &lt;/exclusions&gt;--&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>为slf4j添加配置文件</li></ul><p>log4j.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-meta">log4j.rootLogger</span>=<span class="hljs-string">DEBUG,stdout,file</span><br><span class="hljs-meta">log4j.additivity.org.apache</span>=<span class="hljs-string">true</span><br><span class="hljs-meta">log4j.appender.stdout</span>=<span class="hljs-string">org.apache.log4j.ConsoleAppender</span><br><span class="hljs-meta">log4j.appender.stdout.threshold</span>=<span class="hljs-string">INFO</span><br><span class="hljs-meta">log4j.appender.stdout.layout</span>=<span class="hljs-string">org.apache.log4j.PatternLayout</span><br><span class="hljs-meta">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="hljs-string">%-5p %c&#123;1&#125;:%L - %m%n</span><br><span class="hljs-meta">log4j.appender.file</span>=<span class="hljs-string">org.apache.log4j.DailyRollingFileAppender</span><br><span class="hljs-meta">log4j.appender.file.layout</span>=<span class="hljs-string">org.apache.log4j.PatternLayout</span><br><span class="hljs-meta">log4j.appender.file.DatePattern</span>=<span class="hljs-string">&#x27;.&#x27;yyyy-MM-dd-HH-mm</span><br><span class="hljs-meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="hljs-string">%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %c&#123;1&#125;:%L - %m%n</span><br><span class="hljs-meta">log4j.appender.file.Threshold</span>=<span class="hljs-string">INFO</span><br><span class="hljs-meta">log4j.appender.file.append</span>=<span class="hljs-string">true</span><br><span class="hljs-meta">log4j.appender.file.File</span>=<span class="hljs-string">/workspaces/logs/foodie-api/mylog.log</span><br></code></pre></td></tr></table></figure><h2 id="BaseController"><a href="#BaseController" class="headerlink" title="BaseController"></a>BaseController</h2><blockquote><p>定义分页中每页显示数据的大小</p><p>其它Controller继承BaseController即可</p></blockquote><h2 id="涉及到金额"><a href="#涉及到金额" class="headerlink" title="涉及到金额"></a>涉及到金额</h2><blockquote><p>使用分为单位 9.98元   998分</p><p>int类型</p></blockquote><h2 id="sql语句"><a href="#sql语句" class="headerlink" title="sql语句"></a>sql语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">`` 和 <span class="hljs-string">&#x27;&#x27;</span> 使用<br><span class="hljs-type">varchar</span>类型变量的使用<br></code></pre></td></tr></table></figure><h2 id="Git使用"><a href="#Git使用" class="headerlink" title="Git使用"></a>Git使用</h2><h2 id="购物车功能"><a href="#购物车功能" class="headerlink" title="购物车功能"></a>购物车功能</h2><ol><li>购物车存储形式 - Cookie<ul><li>无需登录,无需查库,保存在浏览器端</li><li>优点：性能好,访问快,没有和数据库交互</li><li>缺点1：换电脑购物车数据会丢失</li><li>缺点2：电脑被其他人登录,不安全</li></ul></li><li>购物车存储形式-Session<ul><li>用户登录后,购物车数据放入用户会话</li><li>优点：初期性能较好,访问快</li><li>缺点1：session基于内存,用户量庞大影响服务器性能</li><li>缺点2：只能存在当前会话,不适用集群与分布式系统</li></ul></li><li>购物车存储形式-数据库<ul><li>用户登录后,购物车数据存入数据库</li><li>优点：数据持久化，可在任何地点任何时间访问</li><li>缺点：频繁读写数据库,造成数据库压力</li></ul></li><li>购物车存储形式 - Redis<ul><li>用户登录后，购物车数据存入redis缓存</li><li>优点1：数据持久化，可在任何地点任何时间访问</li><li>优点2：频繁读写基于缓存,不会造成数据库压力</li><li>优点3：适合使用集群和分布式系统,可扩展性强 </li></ul></li></ol><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>校验手机号</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">checkMobileIsOk</span><span class="hljs-params">(String mobile)</span> </span>&#123;<br>        String regex = <span class="hljs-string">&quot;^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(17[013678])|(18[0,5-9]))\\d&#123;8&#125;$&quot;</span>;<br>        Pattern p = Pattern.compile(regex);<br>        Matcher m = p.matcher(mobile);<br>        <span class="hljs-keyword">boolean</span> isMatch = m.matches();<br>        <span class="hljs-keyword">return</span> isMatch;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="调用微信支付中心回调接口"><a href="#调用微信支付中心回调接口" class="headerlink" title="调用微信支付中心回调接口"></a>调用微信支付中心回调接口</h2><blockquote><p>同步通知 , 异步通知</p></blockquote><blockquote><p>生成订单 -&gt; 请求支付中心,此时支付页面会轮询订单状态,如果支付成功,支付中心会回调本地接口,将订单状态修改,支付页面会根据订单状态进行跳转,跳转到支付成功页面</p><p>想要让远程支付中心回调本地接口,需要进行内网穿透,使得本地接口可以被远程支付中心调用,或者将项目部署到云服务器</p><p>(可以之间修改数据库订单状态来模拟完成订单支付)</p><p>微信支付方式前端页面可以根据支付中心返回支付金额来得到具体的支付金额</p><p>支付宝支付 无法之间根据支付中心返回的支付金额来显示,只能显示购物车显示的支付金额</p><p>(修改了支付成功页面,不管哪一种支付方式,最后的支付结果都是0.01元)</p></blockquote><h2 id="ComponentScan注解"><a href="#ComponentScan注解" class="headerlink" title="@ComponentScan注解"></a>@ComponentScan注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">(basePackages = &#123;<span class="hljs-string">&quot;com.tho&quot;</span>, <span class="hljs-string">&quot;org.n3r.idworker&quot;</span>&#125;)<br><br><br><span class="hljs-keyword">import</span> org.n3r.idworker.Sid; 导入的Sid<br>使用 <br>  <span class="hljs-meta">@Autowired</span><br>  <span class="hljs-keyword">private</span> Sid sid; <br>是无法使用sid中的方法的,需要加上最上面的注解到 启动类 (Application.class) 才能使用<br></code></pre></td></tr></table></figure><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><blockquote><ul><li><p>使用定时任务关闭超期未支付订单,会存在的弊端:</p></li><li><p>1.会有时间差,程序不严谨</p></li><li><p>  10.39 下单 11.00 检查 不足 1小时 , 12:00 检查,超过1小时多余 21 分钟</p></li><li><p>2.不支持集群</p></li><li><p>  单机没有问题,使用集群后,就会有多个定时任务</p></li><li><p>  解决方案:只使用一台计算机节点,单独用来运行所有定时任务</p></li><li><p>3.会对数据库全表搜索,影响数据库性能 : select * from order_status</p></li><li><p>定时任务,仅仅只适用于小型轻量级项目,传统项目</p></li><li><p>消息队列 MQ 来 解决定时任务的需求</p></li><li><p>延时任务(队列)</p></li><li><p>10:12 下单的,未付款订单 , 11:12分检查,如果当前状态还是10, 则直接关闭订单即可</p></li></ul></blockquote><h2 id="Sql语句"><a href="#Sql语句" class="headerlink" title="Sql语句"></a>Sql语句</h2><p>查询名字重复的数据</p><p>删除名字重复的数据</p><h2 id="参数校验"><a href="#参数校验" class="headerlink" title="参数校验"></a>参数校验</h2><h3 id="Hibernate-Validator校验参数"><a href="#Hibernate-Validator校验参数" class="headerlink" title="Hibernate Validator校验参数"></a>Hibernate Validator校验参数</h3><p><a href="https://www.jianshu.com/p/a1e8a8908ec1">https://www.jianshu.com/p/a1e8a8908ec1</a></p><h4 id="1-实体类上加上相关注解-标识参数校验的规则"><a href="#1-实体类上加上相关注解-标识参数校验的规则" class="headerlink" title="1.实体类上加上相关注解,标识参数校验的规则"></a>1.实体类上加上相关注解,标识参数校验的规则</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">package</span> com.tho.pojo.bo.center;<br><br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModel;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiModelProperty;<br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> org.hibernate.validator.constraints.Length;<br><br><span class="hljs-keyword">import</span> javax.validation.constraints.*;<br><span class="hljs-keyword">import</span> java.util.Date;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@ApiModel(value=&quot;用户对象&quot;, description=&quot;从客户端，由用户传入的数据封装在此entity中&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CenterUserBO</span> </span>&#123;<br><br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;用户名&quot;, name=&quot;username&quot;, example=&quot;json&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;密码&quot;, name=&quot;password&quot;, example=&quot;123456&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;确认密码&quot;, name=&quot;confirmPassword&quot;, example=&quot;123456&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> String confirmPassword;<br><br><br>    <span class="hljs-meta">@NotBlank(message = &quot;用户昵称不能为空&quot;)</span><br>    <span class="hljs-meta">@Length(max = 12, message = &quot;用户昵称不能超过12位&quot;)</span><br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;用户昵称&quot;, name=&quot;nickname&quot;, example=&quot;杰森&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> String nickname;<br><br>    <span class="hljs-meta">@Length(max = 12, message = &quot;用户真实姓名不能超过12位&quot;)</span><br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;真实姓名&quot;, name=&quot;realname&quot;, example=&quot;杰森&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> String realname;<br><br>    <span class="hljs-meta">@Pattern(regexp = &quot;^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;))+\\d&#123;8&#125;)$&quot;, message = &quot;手机号格式不正确&quot;)</span><br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;手机号&quot;, name=&quot;mobile&quot;, example=&quot;13999999999&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> String mobile;<br><br>    <span class="hljs-meta">@Email</span><br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;邮箱地址&quot;, name=&quot;email&quot;, example=&quot;imooc@imooc.com&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> String email;<br><br>    <span class="hljs-meta">@Min(value = 0, message = &quot;性别选择不正确&quot;)</span><br>    <span class="hljs-meta">@Max(value = 2, message = &quot;性别选择不正确&quot;)</span><br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;性别&quot;, name=&quot;sex&quot;, example=&quot;0:女 1:男 2:保密&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> Integer sex;<br>    <span class="hljs-meta">@ApiModelProperty(value=&quot;生日&quot;, name=&quot;birthday&quot;, example=&quot;1900-01-01&quot;, required = false)</span><br>    <span class="hljs-keyword">private</span> Date birthday;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-Controller中加入相关注解"><a href="#2-Controller中加入相关注解" class="headerlink" title="2.Controller中加入相关注解"></a>2.Controller中加入相关注解</h4><blockquote><p>@Valid 加到 @RequestBody 注解的实体类</p><p>加上 BindingResult result 参数</p><p>getErrors 方法获取 错误信息</p><p>判断BindingResult是否保存错误的校验信息,如果有,直接return<br>       if (result.hasErrors()) {<br>           Map&lt;String, String&gt; errors = getErrors(result);<br>           return CommonJsonResult.errorMap(errors);<br>       }</p><p>前端做好错误信息提示</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-meta">@ApiOperation(value = &quot;获取用户信息&quot;, notes = &quot;获取用户信息&quot;, httpMethod = &quot;Post &quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/update&quot;)</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> CommonJsonResult <span class="hljs-title">update</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">            <span class="hljs-meta">@ApiParam(name = &quot;userId&quot;, value = &quot;用户id&quot;, required = true)</span></span></span><br><span class="hljs-params"><span class="hljs-function">            <span class="hljs-meta">@RequestParam</span> String userId,</span></span><br><span class="hljs-params"><span class="hljs-function">            <span class="hljs-meta">@RequestBody</span>  <span class="hljs-meta">@Valid</span> CenterUserBO centerUserBO,</span></span><br><span class="hljs-params"><span class="hljs-function">            BindingResult result,</span></span><br><span class="hljs-params"><span class="hljs-function">            HttpServletRequest request,</span></span><br><span class="hljs-params"><span class="hljs-function">            HttpServletResponse response)</span> </span>&#123;<br>        <span class="hljs-comment">// 判断BindingResult是否保存错误的校验信息,如果有,直接return</span><br>        <span class="hljs-keyword">if</span> (result.hasErrors()) &#123;<br>            Map&lt;String, String&gt; errors = getErrors(result);<br>            <span class="hljs-keyword">return</span> CommonJsonResult.errorMap(errors);<br>        &#125;<br><br><br><br>        Users userResult = centerUserService.updateUserInfo(userId, centerUserBO);<br>        Users users1 = setNullPropertyValue(userResult);<br>        <span class="hljs-comment">// 设置cookie</span><br>        CookieUtils.setCookie(request, response, <span class="hljs-string">&quot;user&quot;</span>,<br>                JsonUtils.objectToJson(users1), <span class="hljs-keyword">true</span>);<br><br><br>        <span class="hljs-comment">// todo 后续要改,要增加令牌token,会整合进redis,分布式会话</span><br>        <span class="hljs-keyword">return</span> CommonJsonResult.ok();<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Author</span> tho</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Date</span> 2021/11/6 15:54</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param</span> result</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Return</span> Map&lt;String,String&gt;</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Description</span>: 获取hibernate.validator 校验的错误</span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> Map&lt;String, String&gt; <span class="hljs-title">getErrors</span><span class="hljs-params">(BindingResult result)</span> </span>&#123;<br>        HashMap&lt;String, String&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>        List&lt;FieldError&gt; errorList = result.getFieldErrors();<br>        <span class="hljs-keyword">for</span> (FieldError error : errorList) &#123;<br>            String errorField = error.getField();<br>            String errorMsg = error.getDefaultMessage();<br>            map.put(errorField, errorMsg);<br>        &#125;<br>        <span class="hljs-keyword">return</span> map;<br><br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="商家发货需要通过浏览器发起请求"><a href="#商家发货需要通过浏览器发起请求" class="headerlink" title="商家发货需要通过浏览器发起请求"></a>商家发货需要通过浏览器发起请求</h2><blockquote><p>添加一个按钮,进行商家发货</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux命令手册</title>
    <link href="/2021/10/29/Linux%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/10/29/Linux%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>Linux基本命令</p><span id="more"></span><h2 id="1、Linux初级指令"><a href="#1、Linux初级指令" class="headerlink" title="1、Linux初级指令"></a>1、Linux初级指令</h2><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><blockquote><p>ls - List 默认列出当前目录,可以列出其他目录或者路径下的文件信息,目录信息</p><p>ls 还可以列出指定目录下的文件列表</p></blockquote><p>ls命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a  列出指定目录下的所有文件，包括隐藏文件<br><br>-c 使用最后一次更改文件状态以进行排序(-t)或长时间打印(-l)的时间<br><br>-h 与-l选项一起使用时，请使用单位后缀:Byte、Kilobyte、mete、gb、tb和Petabyte，以便使用以2为基数的大小将数字减少到3或更少<br><br>-l 长格式列表。(见下文)。如果输出到终端，则所有文件大小的总和将输出到长清单前面的一行中<br><br>-n 以数字形式显示用户和组id，而不是在长(-l)输出中转换为用户或组名。这个选项默认打开-l选项<br><br>-o 以长格式列出，但省略组id<br><br>-s 显示每个文件实际使用的文件系统块的数量，以512字节为单位，其中部分单元四舍五入为下一个整数值<br><br>-t 在按照字典顺序对操作数排序之前，先按修改的时间排序(最近修改的是first)<br><br>-u 使用最后一次访问的时间，而不是最后一次修改文件进行排序<br></code></pre></td></tr></table></figure><h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><blockquote><p>pwd - Print Working Directory</p><p>打印当前工作目录的完整路径名</p></blockquote><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><blockquote><p>touch - change file timestamps</p><p>将每个文件的访问和修改时间更新为当前时间,除非提供-c 或 -h, 否则将根据File参数创建文件</p></blockquote><p>touch命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a  或--time=atime或--time=access或--time=use 只更改存取时间。<br><br>-c  或--no-create 不建立任何文档。<br><br>-d 使用指定的日期时间，而非现在的时间。<br><br>-f 此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题。<br><br>-m  或--time=mtime或--time=modify 只更改变动时间。<br><br>-r 把指定文档或目录的日期时间，统统设成和参考文档或目录的日期时间相同。<br><br>-t 使用指定的日期时间，而非现在的时间。<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> touch 使用示例</span><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> touch test1 test2 test3</span><br><span class="hljs-meta">#</span><span class="bash"> 创建了 test1 test2 test3 三个文件</span><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> touch -c test5</span><br><span class="hljs-meta">#</span><span class="bash"> 没有创建test5文件</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">stat</span> <span class="hljs-built_in">test</span>* 查看所有以<span class="hljs-built_in">test</span>为前缀的文件的详细信息</span><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">stat</span> <span class="hljs-built_in">test</span>*</span><br>  File: test1<br>  Size: 0               Blocks: 0          IO Block: 65536  regular empty file<br>Device: 66075b9fh/1711758239d   Inode: 3659174697289084  Links: 1<br>Access: (0644/-rw-r--r--)  Uid: (197609/     zly)   Gid: (197121/ UNKNOWN)<br>Access: 2021-10-29 12:38:30.824178500 +0800<br>Modify: 2021-10-29 12:38:30.824178500 +0800<br>Change: 2021-10-29 12:38:30.821779700 +0800<br> Birth: 2021-10-29 12:38:30.821779700 +0800<br>  File: test2<br>  Size: 0               Blocks: 0          IO Block: 65536  regular empty file<br>Device: 66075b9fh/1711758239d   Inode: 281474976761213  Links: 1<br>Access: (0644/-rw-r--r--)  Uid: (197609/     zly)   Gid: (197121/ UNKNOWN)<br>Access: 2021-10-29 12:38:30.825094100 +0800<br>Modify: 2021-10-29 12:38:30.825094100 +0800<br>Change: 2021-10-29 12:38:30.821779700 +0800<br> Birth: 2021-10-29 12:38:30.821779700 +0800<br>  File: test3<br>  Size: 0               Blocks: 0          IO Block: 65536  regular empty file<br>Device: 66075b9fh/1711758239d   Inode: 281474976761214  Links: 1<br>Access: (0644/-rw-r--r--)  Uid: (197609/     zly)   Gid: (197121/ UNKNOWN)<br>Access: 2021-10-29 12:38:30.825911400 +0800<br>Modify: 2021-10-29 12:38:30.825911400 +0800<br>Change: 2021-10-29 12:38:30.821779700 +0800<br> Birth: 2021-10-29 12:38:30.821779700 +0800<br></code></pre></td></tr></table></figure><h3 id="cat-amp-tac"><a href="#cat-amp-tac" class="headerlink" title="cat&amp;tac"></a>cat&amp;tac</h3><blockquote><p>cat 将File 或 标准输入连接到标准输出</p></blockquote><p>cat参数格式</p><p>cat [Option] [File]</p><p>cat命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">-A, --show-all      等价于 -vET<br><br>-b, --number-nonblank  对非空输出行编号<br><br>-e            等价于 -vE<br><br>-E, --show-ends     在每行结束处显示<br><br>-n, --number   对输出的所有行编号,由1开始对所有输出的行数编号<br><br>-s, --squeeze-blank 有连续两行以上的空白行，就代换为一行的空白行<br><br>-t            与 -vT 等价<br><br>-T, --show-tabs     将跳格字符显示为 ^I<br><br>-u            (被忽略)<br><br>-v, --show-nonprinting  使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外<br></code></pre></td></tr></table></figure><p>cat命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> cat test1</span><br>111<br>222<br>333<br>xxx<br>yyy<br>zzz<br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> cat -n test1</span><br>     1  111<br>     2  222<br>     3  333<br>     4  xxx<br>     5  yyy<br>     6  zzz<br>     <br></code></pre></td></tr></table></figure><blockquote><p>tac 命令与cat命令展示的内容相反,不能带行号输出</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> tac test1</span><br>zzzyyy<br>xxx<br>333<br>222<br>111<br><br></code></pre></td></tr></table></figure><h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><blockquote><p>mkdir - Make Directory</p><p>如果目录不存在,创建目录</p></blockquote><p>mkdir命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">-m, --mode=模式，设定权限&lt;模式&gt; (类似 chmod)，而不是 rwxrwxrwx 减 umask<br><br>-p, --parents 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录;<br><br>-v, --verbose 每次创建新目录都显示信息<br><br>--help  显示此帮助信息并退出<br><br>--version 输出版本信息并退出<br></code></pre></td></tr></table></figure><h3 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h3><blockquote><p>Cd - Change Directory</p><p>切换当前目录至 指定目录</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">cd /<br></code></pre></td></tr></table></figure><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><blockquote><p>rm&amp;rmdir - Remove Directory</p><p>删除指定目录,文件权限不允许写入,会提示用户进行确实是否删除指定canshu</p></blockquote><p>rm命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">-f, --force  忽略不存在的文件，从不给出提示。<br><br>-i, --interactive 进行交互式删除<br><br>-r, -R, --recursive  指示rm将参数中列出的全部目录和子目录均递归地删除。<br><br>-d, --dir 删除空目录<br></code></pre></td></tr></table></figure><h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><blockquote><p>mv - Move</p><p>移动目录或者文件到指定目录下,同时具有重命名功能</p></blockquote><p>mv名称参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">-b ：若需覆盖文件，则覆盖前先行备份。<br><br>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；<br><br>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖<br><br>-n：不要覆盖现有文件。（-n选项将覆盖以前的任何-f或-i选项。）<br><br>-u ：若目标文件已经存在，且 source 比较新，才会更新(update)<br></code></pre></td></tr></table></figure><h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><blockquote><p>cp - Copy</p><p>将source_file 内容拷贝到 target_file,尝试将文件复制到自身,则复制失败</p></blockquote><h3 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h3><blockquote><p>echo </p><p>echo实用程序将任何指定的操作数写入标准输出，这些操作数由单个空格（<code>）字符分隔，后跟换行符（</code>\ n’）字符。</p></blockquote><p>echo 命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash">PWD 是取当前路径，然后<span class="hljs-built_in">echo</span>到标准输出，一般<span class="hljs-built_in">echo</span> \<span class="hljs-variable">$name</span> 用来查看某个环境变量的值zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn</span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello world&quot;</span></span><br>hello world<br><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-variable">$pwd</span></span><br><br><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-variable">$PWD</span></span><br>/d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash">PWD 是取当前路径，然后<span class="hljs-built_in">echo</span>到标准输出，一般<span class="hljs-built_in">echo</span> \<span class="hljs-variable">$name</span> 用来查看某个环境变量的值</span><br></code></pre></td></tr></table></figure><h3 id="head-amp-tail"><a href="#head-amp-tail" class="headerlink" title="head &amp; tail"></a>head &amp; tail</h3><blockquote><p>head </p><p>此过滤器显示每个指定文件或标准输入（如果未指定文件）的前几行或字节。</p><p>If more than a single file is specified, each file is preceded by a header consisting of the string <code>==&gt; XXX &lt;==&#39;&#39; where</code>XXX’’ is the name of the file.</p><p>如果省略count，则默认为10.如果指定了多个文件，则每个文件的头均由字符串<code>==&gt; XXX &lt;==&#39;&#39;组成，其中</code>XXX’’为文件名 文件。</p></blockquote><p>head常用参数示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">-n 展示前n行<br><br>-c 展示前n个字符<br></code></pre></td></tr></table></figure><p>head 命令示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs she">zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br>$ head test<br>111<br>222<br>333<br>xxx<br>yyy<br>zzz<br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br>$ head -n3 test<br>111<br>222<br>333<br><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br>$ head -c5 test<br>111<br><br></code></pre></td></tr></table></figure><blockquote><p>tail 命令与head命令相反,由文件末尾开始展示文件内容</p></blockquote><ul><li>tail 与 head 常用来查看日志,日志文件太大,没办法用vim 或者 cat 去看</li><li>要么用 head tail 要么用 more &amp; less</li></ul><h3 id="more-amp-less"><a href="#more-amp-less" class="headerlink" title="more &amp; less"></a>more &amp; less</h3><blockquote><p>more</p><p>more每次打开文件不是全部把文件读入内存而是流式读取，不会因为vi|vim某个大文件而造成系统oom。</p></blockquote><ul><li>more&amp;less最重要的一点就是流式读取，支持翻页，像cat命令是全部读取输出到标准输出，如果文件太大会把屏幕刷满的，根本没办法看。</li></ul><p>more 命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">+n   从笫n行开始显示<br><br>-n    定义屏幕大小为n行<br><br>+/pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示<br><br>-c    从顶部清屏，然后显示<br><br>-d    提示“Press space to continue，’q’ to quit（按空格键继续，按q键退出）”，禁用响铃功能<br><br>-l    忽略Ctrl+l（换页）字符<br><br>-p    通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似<br><br>-s    把连续的多个空行显示为一行<br><br>-u    把文件内容中的下画线去掉<br></code></pre></td></tr></table></figure><ul><li><strong>less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件</strong></li></ul><h3 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h3><blockquote><p>wc</p><p>输出文件中包含的行数，字数和字节数。</p></blockquote><p>wc常用命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">-c 统计字节数。<br><br>-l 统计行数。<br><br>-m 统计字符数。这个标志不能与 -c 标志一起使用。<br><br>-w 统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串。<br><br>-L 打印最长行的长度。<br></code></pre></td></tr></table></figure><h3 id="date-amp-cal"><a href="#date-amp-cal" class="headerlink" title="date &amp; cal"></a>date &amp; cal</h3><blockquote><p>date cal 显示当前时间</p></blockquote><h3 id="which"><a href="#which" class="headerlink" title="which"></a>which</h3><blockquote><p>which - </p><p>which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p></blockquote><p>which命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">which</span> hexo</span><br>/c/Users/zly/AppData/Roaming/npm/hexo<br><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">which</span> java</span><br>/c/Program Files (x86)/Common Files/Oracle/Java/javapath/java<br><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">which</span> ls</span><br>/usr/bin/ls<br><br></code></pre></td></tr></table></figure><h3 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h3><blockquote><p>whereis</p><p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p></blockquote><p>whereis命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">-b  定位可执行文件。<br><br>-m  定位帮助文件。<br><br>-s  定位源代码文件。<br><br>-u  搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。<br><br>-B  指定搜索可执行文件的路径。<br><br>-M  指定搜索帮助文件的路径。<br><br>-S  指定搜索源代码文件的路径。<br></code></pre></td></tr></table></figure><p>where &amp; whereis 命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">where</span> java</span><br>C:\Program Files (x86)\Common Files\Oracle\Java\javapath\java.exe<br>E:\jdk_1.8\bin\java.exe<br>E:\jdk_1.8\jre\bin\java.exe<br><br>zly@LAPTOP-U1UMJM7B MINGW64 /d/LinuxLearn<br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">where</span> hexo</span><br>C:\Users\zly\AppData\Roaming\npm\hexo<br>C:\Users\zly\AppData\Roaming\npm\hexo.cmd<br><br></code></pre></td></tr></table></figure><h3 id="nl"><a href="#nl" class="headerlink" title="nl"></a>nl</h3><blockquote><p>nl</p><p>nl命令在linux系统中用来计算文件中行号。nl 可以将输出的文件内容自动的加上行号！其默认的结果与 cat -n 有点不太一样， nl 可以将行号做比较多的显示设计，包括位数与是否自动补齐 0 等等的功能。</p></blockquote><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><blockquote><p>ps</p><p>ps实用程序显示标题行，其后是包含有关具有控制终端的所有进程的信息的行。</p></blockquote><p>ps命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell">a 显示所有进程<br><br>-a 显示同一终端下的所有程序<br><br>-A 显示所有进程<br><br>c 显示进程的真实名称<br><br>-N 反向选择<br><br>-e 等于“-A”<br><br>e 显示环境变量<br><br>f 显示程序间的关系<br><br>-H 显示树状结构<br><br>r 显示当前终端的进程<br><br>T 显示当前终端的所有程序<br><br>u 指定用户的所有进程<br><br>-au 显示较详细的资讯<br><br>-aux 显示所有包含其他使用者的行程<br><br>-C&lt;命令&gt; 列出指定命令的状况<br><br>--lines&lt;行数&gt; 每页显示的行数<br><br>--width&lt;字符数&gt; 每页显示的字符数<br></code></pre></td></tr></table></figure><p>ps命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">查看所有进程</span><br><span class="hljs-meta">$</span><span class="bash">ps -a</span><br><span class="hljs-meta">#</span><span class="bash">查看进程的环境变量和程序间的关系</span><br><span class="hljs-meta">$</span><span class="bash">ps -ef</span><br></code></pre></td></tr></table></figure><h3 id="kill-amp-killall"><a href="#kill-amp-killall" class="headerlink" title="kill &amp; killall"></a>kill &amp; killall</h3><blockquote><p>kill</p><p>命令kill将指定的信号发送到指定的进程或进程组。如果未指定信号，则发送TERM信号。TERM信号将杀死不捕获该信号的进程。对于其他过程，可能需要使用KILL（9）信号，因为无法捕获该信号。</p></blockquote><p>kill 命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">-l 信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称<br><br>-a 当处理当前进程时，不限制命令名和进程号的对应关系<br><br>-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号<br><br>-s 指定发送信号<br><br>-u 指定用户<br><span class="hljs-meta"></span><br><span class="hljs-meta">$</span><span class="bash"> <span class="hljs-built_in">kill</span> -l</span><br><span class="hljs-meta">#</span><span class="bash"> 查看所有的 <span class="hljs-built_in">kill</span> 可选项</span><br></code></pre></td></tr></table></figure><h5 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h5><p>HUP   1   终端断线<br>INT   2   中断（同 Ctrl + C）<br>QUIT   3   退出（同 Ctrl + \）<br>TERM  15   终止<br>KILL   9   强制终止<br>CONT  18   继续（与STOP相反， fg/bg命令）<br>STOP   19   暂停（同 Ctrl + Z）</p><ul><li>kill -9 是我们使用的最多的信号，其实这种方式一点也不优雅，应该使用kill -15信号，大部分程序接收到SIGTERM信号后，会先释放自己的资源，然后再停止。但是也有程序可能接收信号后，做一些其他的事情（如果程序正在等待IO，可能就不会立马做出响应，等到io完成后在结束），也就是说，SIGTERM多半是会被阻塞的。</li></ul><h2 id="2、Linux进阶指令"><a href="#2、Linux进阶指令" class="headerlink" title="2、Linux进阶指令"></a>2、Linux进阶指令</h2><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><blockquote><p>find</p><p>find实用程序对列出的每个路径递归地遍历目录树，根据树中的每个文件计算表达式(由下面列出的“初选”和“操作数”组成)。</p></blockquote><ul><li><strong>这个命令使用频率极高，如果对这个命令了解很透彻，在日常工作中可以事半功倍。这个命令的参数较多，常用的参数会在下面常用参数示例讲清楚</strong></li></ul><p>find命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs shell">-print：find命令将匹配的文件输出到标准输出。<br><br>-exec：find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为&#x27;command&#x27; &#123; &#125; \;，注意&#123;  &#125;和\；之间的空格。<br><br>-name  按照文件名查找文件。<br><br>-perm  按照文件权限来查找文件。<br><br>-prune 使用这一选项可以使find命令不在当前指定的目录中查找，如果同时使用-depth选项，那么-prune将被find命令忽略。<br><br>-user  按照文件属主来查找文件。<br><br>-group 按照文件所属的组来查找文件。<br><br>-mtime -n +n 按照文件的更改时间来查找文件， - n表示文件更改时间距现在n天以内，+ n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime 选项，但它们都和-m time选项。<br><br>-nogroup 查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。<br><br>-nouser  查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。<br><br>-newer file1 ! file2 查找更改时间比文件file1新但比文件file2旧的文件。<br><br>-type 查找某一类型的文件，诸如：<br><br>b - 块设备文件。<br><br>d - 目录。<br><br>c - 字符设备文件。<br><br>p - 管道文件。<br><br>l - 符号链接文件。<br><br>f - 普通文件。<br><br>-size n：[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计。-depth：在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找。<br><br>-fstype：查找位于某一类型文件系统中的文件，这些文件系统类型通常可以在配置文件/etc/fstab中找到，该配置文件中包含了本系统中有关文件系统的信息。<br><br>-mount：在查找文件时不跨越文件系统mount点。<br><br>-follow：如果find命令遇到符号链接文件，就跟踪至链接所指向的文件。<br><br>-cpio：对匹配的文件使用cpio命令，将这些文件备份到磁带设备中。<br><br>另外,下面三个的区别:<br><br>-amin n  查找系统中最后N分钟访问的文件<br><br>-atime n 查找系统中最后n*24小时访问的文件<br><br>-cmin n  查找系统中最后N分钟被改变文件状态的文件<br><br>-ctime n 查找系统中最后n*24小时被改变文件状态的文件<br><br>-mmin n  查找系统中最后N分钟被改变文件数据的文件<br><br>-mtime n 查找系统中最后n*24小时被改变文件数据的文件<br></code></pre></td></tr></table></figure><p>find 命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">find /user -name &quot;*.log&quot; -print<br><span class="hljs-meta">#</span><span class="bash"> -name参数常用参数示例  查找 /users 目录下所有以 .<span class="hljs-built_in">log</span> 结尾的文件</span><br></code></pre></td></tr></table></figure><ul><li>有个日志目录，我系统的所有日志都会打到这个目录，目录的日志文件命名很随意，我没办法说根据名字删除，于是我想到用日期的方式删除，保存一个月的日志即可。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">find /home/tho/logs// -mtime +30 -name &quot;.log.gz&quot; -exec rm -rf &#123;&#125; \;<br></code></pre></td></tr></table></figure><ul><li><p><strong>exec 参数后面跟的是command，它的终止是以<code>;</code>为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。</strong></p></li><li><p>其实我把这个命令放在我的一个系统crontab文件里面，每天执行一次，这样我的日志目录就不用了手动清理。corntab使用详解在后面的命令中会讲到。</p></li><li><p>-exec 后面可以接任何命令，你可以灵活运用，再结合到前面的-name参数，可以玩出花来。</p></li></ul><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><blockquote><p>grep </p><p>grep实用程序搜索任何给定的输入文件，选择与一个或多个模式匹配的行。默认情况下，如果模式中的正则表达式（RE）匹配输入行而没有尾随换行符，则该模式会匹配输入行。空表达式匹配每行。与至少一种模式匹配的每条输入线均写入标准输出</p></blockquote><ul><li>做基础服务，使用服务的人不免会遇到问题，这时候我就去要去看日志了，日志都是G级别的，当然不能用vim打开去搜索，会把系统挂掉，vim是全部文档加载到内存。这时候就需要使用grep命令去根据一些关键信息匹配查找了。（当然有些同学可能会说，既然经常查日志的话，就不能把日志接入到ElasticSearch这种可搜索的组建中，很好，用技术去解决实际问题。我们也是这样做的，但总免不了还是会去服务器上查一下日志，学会这个命令没错的）</li></ul><p>grep命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a  --text  不要忽略二进制的数据。<br><br>-A&lt;显示行数&gt;  --after-context=&lt;显示行数&gt;  #除了显示符合范本样式的那一列之外，并显示该行之后的内容。<br><br>-b  --byte-offset  #在显示符合样式的那一行之前，标示出该行第一个字符的编号。<br><br>-B&lt;显示行数&gt;  --before-context=&lt;显示行数&gt;  #除了显示符合样式的那一行之外，并显示该行之前的内容。<br><br>-c  --count  #计算符合样式的列数。<br><br>-C&lt;显示行数&gt;  --context=&lt;显示行数&gt;或-&lt;显示行数&gt;  #除了显示符合样式的那一行之外，并显示该行之前后的内容。<br><br>-d &lt;动作&gt;   --directories=&lt;动作&gt;  #当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。<br><br>-e&lt;范本样式&gt; --regexp=&lt;范本样式&gt;  #指定字符串做为查找文件内容的样式。<br><br>-E   --extended-regexp  #将样式为延伸的普通表示法来使用。<br><br>-f&lt;规则文件&gt; --file=&lt;规则文件&gt;  #指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。<br><br>-F  --fixed-regexp  #将样式视为固定字符串的列表。<br><br>-G  --basic-regexp  #将样式视为普通的表示法来使用。<br><br>-h  --no-filename  #在显示符合样式的那一行之前，不标示该行所属的文件名称。<br><br>-H  --with-filename  #在显示符合样式的那一行之前，表示该行所属的文件名称。<br><br>-i  --ignore-case  #忽略字符大小写的差别。<br><br>-l  --file-with-matches  #列出文件内容符合指定的样式的文件名称。<br><br>-L  --files-without-match  #列出文件内容不符合指定的样式的文件名称。<br><br>-n  --line-number  #在显示符合样式的那一行之前，标示出该行的列数编号。<br><br>-q  --quiet或--silent  #不显示任何信息。<br><br>-r  --recursive  #此参数的效果和指定“-d recurse”参数相同。<br><br>-s  --no-messages  #不显示错误信息。<br><br>-v  --revert-match  #显示不包含匹配文本的所有行。<br><br>-V  --version  #显示版本信息。<br><br>-w  --word-regexp  #只显示全字符合的列。<br><br>-x  --line-regexp  #只显示全列符合的列。<br><br>-y  此参数的效果和指定“-i”参数相同。<br></code></pre></td></tr></table></figure><ul><li>掌握grep的常用参数，会让你查找日志或者内容非常轻松。特别是当你数据量很大的时候，没办法使用vi或者vim打开的情况下。</li></ul><h3 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h3><blockquote><p>cut实用程序从每个文件中剪切出每行的选定部分（由列表指定），并将它们写入标准输出。如果未指定文件参数，或者文件参数为单破折号（-），则从标准输入中读取内容。列表指定的项目可以是列位置，也可以是由特殊字符分隔的字段。列编号从1开始。</p></blockquote><p>cur命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">-b：仅显示行中指定直接范围的内容；<br><br>-c：仅显示行中指定范围的字符；<br><br>-d：指定字段的分隔符，默认的字段分隔符为“TAB”；<br><br>-f：显示指定字段的内容；<br><br>-n：与“-b”选项连用，不分割多字节字符；<br><br>--complement：补足被选择的字节、字符或字段；<br><br>--out-delimiter=&lt;字段分隔符&gt;：指定输出内容是的字段分割符；<br></code></pre></td></tr></table></figure><p>cut 命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash">cut -c-10 tmp.txt  <span class="hljs-comment">#cut tmp.txt文件的前10列</span></span><br><span class="hljs-meta">$</span><span class="bash">cut -c3-5 tmp.txt  <span class="hljs-comment">#cut tmp.txt文件的第3到5列</span></span><br><span class="hljs-meta">$</span><span class="bash">cut -c3- tmp.txt  <span class="hljs-comment">#cut tmp.txt文件的第3到结尾列</span></span><br><span class="hljs-meta">$</span><span class="bash">cut -c7-7 tmp.txt <span class="hljs-comment"># cut tmp.txt 第7列</span></span><br></code></pre></td></tr></table></figure><blockquote><p>综合使用命令</p><p>vim写了一行hello world。对我说，你怎样通过linux命令吧这个文本里面的hello world搞成十行，并且取出每一列的第七个字符。</p><p><strong>当时的我真的是心里一群草泥马跑过，这可难道我了，我沉思了片刻，说只要十行么？多点行么？。当然不行，只要十行，取每行的第七个字符续</strong>沉思了片刻，拿起面试官的电脑就是一顿操作，于是有了我记忆深刻的下面这一行命令。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> cat tmp.cc| &gt;&gt;tmp.cc|&gt;&gt;tmp.cc|&gt;&gt;tmp.cc|head -n10|&gt;tmp.cc|cut -c7-7</span><br></code></pre></td></tr></table></figure><h3 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h3><blockquote><p>diff</p><p>比较两个文件的不同</p></blockquote><p>diff 命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs shell">-b或--ignore-space-change 不检查空格字符的不同。<br><br>-B或--ignore-blank-lines 不检查空白行。<br><br>-c 显示全部内文，并标出不同之处。<br><br>-C或--context 与执行&quot;-c-&quot;指令相同。<br><br>-d或--minimal 使用不同的演算法，以较小的单位来做比较。<br><br>-D或ifdef 此参数的输出格式可用于前置处理器巨集。<br><br>-e或--ed 此参数的输出格式可用于ed的script文件。<br><br>-f或-forward-ed 输出的格式类似ed的script文件，但按照原来文件的顺序来显示不同处。<br><br>-H或--speed-large-files 比较大文件时，可加快速度。<br><br>-l或--ignore-matching-lines 若两个文件在某几行有所不同，而这几行同时都包含了选项中指定的字符或字符串，则不显示这两个文件的差异。<br><br>-i或--ignore-case 不检查大小写的不同。<br><br>-l或--paginate 将结果交由pr程序来分页。<br><br>-n或--rcs 将比较结果以RCS的格式来显示。<br><br>-N或--new-file 在比较目录时，若文件A仅出现在某个目录中，预设会显示：Only in目录：文件A若使用-N参数，则diff会将文件A与一个空白的文件比较。<br><br>-p 若比较的文件为C语言的程序码文件时，显示差异所在的函数名称。<br><br>-P或--unidirectional-new-file 与-N类似，但只有当第二个目录包含了一个第一个目录所没有的文件时，才会将这个文件与空白的文件做比较。<br><br>-q或--brief 仅显示有无差异，不显示详细的信息。<br><br>-r或--recursive 比较子目录中的文件。<br><br>-s或--report-identical-files 若没有发现任何差异，仍然显示信息。<br><br>-S或--starting-file 在比较目录时，从指定的文件开始比较。<br><br>-t或--expand-tabs 在输出时，将tab字符展开。<br><br>-T或--initial-tab 在每行前面加上tab字符以便对齐。<br><br>-u,-U或--unified= 以合并的方式来显示文件内容的不同。<br><br>-v或--version 显示版本信息。<br><br>-w或--ignore-all-space 忽略全部的空格字符。<br><br>-W或--width 在使用-y参数时，指定栏宽。<br><br>-x或--exclude 不比较选项中所指定的文件或目录。<br><br>-X或--exclude-from 您可以将文件或目录类型存成文本文件，然后在=中指定此文本文件。<br><br>-y或--side-by-side 以并列的方式显示文件的异同之处。<br></code></pre></td></tr></table></figure><p>diff示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> diff <span class="hljs-built_in">test</span> tmp.cc</span><br>1,3d0<br>&lt; hello world<br>&lt; hello world<br>&lt; 11<br></code></pre></td></tr></table></figure><h3 id="tar-amp-gzip"><a href="#tar-amp-gzip" class="headerlink" title="tar &amp; gzip"></a>tar &amp; gzip</h3><blockquote><p>tar - 用来压缩和解压文件,tar本身不具有压缩功能,它是调用压缩功能实现的</p></blockquote><p>tar命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell">-A 新增压缩文件到已存在的压缩<br><br>-B 设置区块大小<br><br>-c 建立新的压缩文件<br><br>-d 记录文件的差别<br><br>-r 添加文件到已经压缩的文件<br><br>-u 添加改变了和现有的文件到已经存在的压缩文件<br><br>-x 从压缩的文件中提取文件<br><br>-t 显示压缩文件的内容<br><br>-z 支持gzip解压文件<br><br>-j 支持bzip2解压文件<br><br>-Z 支持compress解压文件<br><br>-v 显示操作过程<br><br>-l 文件系统边界设置<br><br>-k 保留原有文件不覆盖<br><br>-m 保留文件不被覆盖<br><br>-W 确认压缩文件的正确性<br><br>-b 设置区块数目<br><br>-C 切换到指定目录<br><br>-f 指定压缩文件<br></code></pre></td></tr></table></figure><p>tar参数示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">打包  tar -cvf 包名  文件名</span><br><span class="hljs-meta">$</span><span class="bash">tar -cvf test.tar test.txt</span> <br><span class="hljs-meta">#</span><span class="bash">解包  tar -xvf 包名</span> <br><span class="hljs-meta">$</span><span class="bash">tar -xvf test.tar</span><br><span class="hljs-meta">#</span><span class="bash">压缩  tar -czvf 包名 文件名</span><br><span class="hljs-meta">$</span><span class="bash">tar -czvf test.tgz test.txt</span><br><span class="hljs-meta">#</span><span class="bash">解压  tar -xzvf 包名</span><br><span class="hljs-meta">$</span><span class="bash">tar -xzvf test.tgz</span><br></code></pre></td></tr></table></figure><p>-c 创建 -x 提取文件</p><p>-v 显示操作过程</p><p>-f 指定文件</p><p>-z 支持压缩文件</p><h3 id="du"><a href="#du" class="headerlink" title="du"></a>du</h3><blockquote><p>du</p><p>du实用程序显示每个文件自变量以及以每个目录自变量为根的文件层次结构中每个目录的文件系统块使用情况。如果未指定文件，则显示以当前目录为根的层次结构的块使用情况。</p></blockquote><p>du命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a或-all 显示目录中个别文件的大小。<br><br>-b或-bytes 显示目录或文件大小时，以byte为单位。<br><br>-c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。<br><br>-k或--kilobytes 以KB(1024bytes)为单位输出。<br><br>-m或--megabytes 以MB为单位输出。<br><br>-s或--summarize 仅显示总计，只列出最后加总的值。<br><br>-h或--human-readable 以K，M，G为单位，提高信息的可读性。<br><br>-x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。<br><br>-L&lt;符号链接&gt;或--dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。<br><br>-S或--separate-dirs  显示个别目录的大小时，并不含其子目录的大小。<br><br>-X&lt;文件&gt;或--exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。<br><br>--exclude=&lt;目录或文件&gt;     略过指定的目录或文件。<br><br>-D或--dereference-args  显示指定符号链接的源文件大小。<br><br>-H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。<br><br>-l或--count-links  重复计算硬件链接的文件。<br></code></pre></td></tr></table></figure><p>du命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">查看指定文件大小</span><br><span class="hljs-meta">$</span><span class="bash">du -h filename</span><br><span class="hljs-meta">#</span><span class="bash">展示该目录下所有文件大小，大小以可读方式展示</span><br><span class="hljs-meta">$</span><span class="bash">du  -h /</span><br><span class="hljs-meta">#</span><span class="bash">展示当前目录大小</span><br><span class="hljs-meta">$</span><span class="bash">du -sh</span><br><span class="hljs-meta">#</span><span class="bash">展示当前目录下每个目录大小</span><br><span class="hljs-meta">$</span><span class="bash">du -sh ./</span><br><span class="hljs-meta">#</span><span class="bash">显示所有文件的大小，以可读方式展示</span><br><span class="hljs-meta">$</span><span class="bash">du -ah /</span><br></code></pre></td></tr></table></figure><h3 id="df"><a href="#df" class="headerlink" title="df"></a>df</h3><blockquote><p>df</p><p>df实用程序显示有关指定文件系统或其中一部分文件的文件系统上的可用磁盘空间量的统计信息。值以每块计数512字节的形式显示。如果未指定文件或文件系统操作数，则将显示所有已挂载文件系统的统计信息（受下面的-t选项约束）。</p></blockquote><p>df命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a 全部文件系统列表<br><br>-h 方便阅读方式显示<br><br>-H 等于“-h”，但是计算式，1K=1000，而不是1K=1024<br><br>-i 显示inode信息<br><br>-k 区块为1024字节<br><br>-l 只显示本地文件系统<br><br>-m 区块为1048576字节<br><br>--no-sync 忽略 sync 命令<br><br>-P 输出格式为POSIX<br><br>--sync 在取得磁盘信息前，先执行sync命令<br><br>-T 文件系统类型<br><br>--block-size=&lt;区块大小&gt; 指定区块大小<br><br>-t&lt;文件系统类型&gt; 只显示选定文件系统的磁盘信息<br><br>-x&lt;文件系统类型&gt; 不显示选定文件系统的磁盘信息<br></code></pre></td></tr></table></figure><p>df命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">展示当前系统磁盘使用情况，以可读的方式展示</span><br><span class="hljs-meta">$</span><span class="bash"> df -h</span><br>Filesystem      Size  Used Avail Use% Mounted on<br>E:/git/Git      140G   13G  128G   9% /<br>C:               98G   43G   56G  44% /c<br>D:              932G  1.7G  930G   1% /d<br></code></pre></td></tr></table></figure><h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3><blockquote><p>lsof</p><p>lsof（list open files）是一个列出当前系统打开文件的工具。(在linux环境下，任何事物都以文件的形式存在)</p><p>lsof可以打开的文件包括：</p><p>1.普通文件</p><p>2.目录</p><p>3.网络文件系统的文件</p><p>4.字符或设备文件</p><p>5.(函数)共享库</p><p>6.管道，命名管道</p><p>7.符号链接</p><p>8.网络文件（例如：NFS file、网络socket，unix域名socket）</p><p>9.还有其它类型的文件，等等</p><p><strong>这个命令在我日常工作中使用场景很多，使用范围很广。</strong></p></blockquote><p>lsof命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a 列出打开文件存在的进程<br><br>-c&lt;进程名&gt; 列出指定进程所打开的文件<br><br>-g 列出GID号进程详情<br><br>-d&lt;文件号&gt; 列出占用该文件号的进程<br><br>+d&lt;目录&gt; 列出目录下被打开的文件<br><br>+D&lt;目录&gt; 递归列出目录下被打开的文件<br><br>-n&lt;目录&gt; 列出使用NFS的文件<br><br>-i&lt;条件&gt; 列出符合条件的进程。（4、6、协议、:端口、 @ip ）<br><br>-p&lt;进程号&gt; 列出指定进程号所打开的文件<br><br>-u 列出UID号进程详情<br></code></pre></td></tr></table></figure><p>lsof命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">显示当前系统打开的文件</span><br><span class="hljs-meta">$</span><span class="bash">lsof</span>  <br><span class="hljs-meta">#</span><span class="bash">查看某个文件的相关进程  lsof 文件名</span><br><span class="hljs-meta">$</span><span class="bash"> lsof /bin/bash</span><br>COMMAND  PID  USER  FD   TYPE DEVICE SIZE/OFF   NODE NAME<br>bash    9430 midou txt    REG  253,1   960392 140072 /usr/bin/bash<br><span class="hljs-meta">#</span><span class="bash">查看某个用户打开的文件信息</span><br><span class="hljs-meta">$</span><span class="bash">lsof -u username</span><br><span class="hljs-meta">#</span><span class="bash">列出某个程序进程所打开的文件信息</span><br><span class="hljs-meta">$</span><span class="bash">lsof -c java</span><br><span class="hljs-meta">#</span><span class="bash">列出除了某个用户外的被打开的文件信息</span><br><span class="hljs-meta">$</span><span class="bash">lsof -u ^midou</span><br><span class="hljs-meta">#</span><span class="bash">通过某个进程号显示该进行打开的文件</span><br><span class="hljs-meta">$</span><span class="bash">lsof -p pid</span><br><span class="hljs-meta">#</span><span class="bash">列出除了某个进程号，其他进程号所打开的文件信息</span><br><span class="hljs-meta">$</span><span class="bash">lsof -p ^pid</span><br><span class="hljs-meta">#</span><span class="bash">列出所有的网络连接</span><br><span class="hljs-meta">$</span><span class="bash">lsof -i</span><br><span class="hljs-meta">#</span><span class="bash">列出所有tcp 网络连接信息</span><br><span class="hljs-meta">$</span><span class="bash">lsof -i tcp</span><br><span class="hljs-meta">#</span><span class="bash">列出所有udp网络连接信息</span><br><span class="hljs-meta">$</span><span class="bash">lsof -i udp</span><br><span class="hljs-meta">#</span><span class="bash">列出谁在某个端口使用情况</span><br><span class="hljs-meta">$</span><span class="bash">lsof -i :port</span><br><span class="hljs-meta">#</span><span class="bash">特定的tcp端口</span><br><span class="hljs-meta">$</span><span class="bash">lsof -i tcp:port</span> <br><span class="hljs-meta">#</span><span class="bash">特定的udp端口</span><br><span class="hljs-meta">$</span><span class="bash">lsof -i udp:port</span><br><span class="hljs-meta">#</span><span class="bash">列出某个用户的所有活跃的网络端口</span><br><span class="hljs-meta">$</span><span class="bash">lsof -a -u username -i</span><br><span class="hljs-meta">#</span><span class="bash">根据文件描述符范围列出文件信息</span><br><span class="hljs-meta">$</span><span class="bash">lsof -d 0-2</span><br></code></pre></td></tr></table></figure><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><blockquote><p>ping</p><p>将ICMP ECHO_REQUEST数据包发送到网络主机</p></blockquote><p>ping 命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell">-d 使用Socket的SO_DEBUG功能。<br><br>-f 极限检测。大量且快速地送网络封包给一台机器，看它的回应。<br><br>-n 只输出数值。<br><br>-q 不显示任何传送封包的信息，只显示最后的结果。<br><br>-r 忽略普通的Routing Table，直接将数据包送到远端主机上。通常是查看本机的网络接口是否有问题。<br><br>-R 记录路由过程。<br><br>-v 详细显示指令的执行过程。<br><br><br><br>-c 数目：在发送指定数目的包后停止。<br><br>-i 秒数：设定间隔几秒送一个网络封包给一台机器，预设值是一秒送一次。<br><br>-I 网络界面：使用指定的网络界面送出数据包。<br><br>-l 前置载入：设置在送出要求信息之前，先行发出的数据包。<br><br>-p 范本样式：设置填满数据包的范本样式。<br><br>-s 字节数：指定发送的数据字节数，预设值是56，加上8字节的ICMP头，一共是64ICMP数据字节。<br><br>-t 存活数值：设置存活数值TTL的大小。<br><br>ping，在日常工作中都是简单的用来测试本机与其他机器之间的网络通信，当然如果了解这些参数的话，会有更多的用法。<br></code></pre></td></tr></table></figure><p>ping命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">检测网络情况</span><br><span class="hljs-meta">$</span><span class="bash">ping host</span><br><span class="hljs-meta">#</span><span class="bash">ping网关</span><br><span class="hljs-meta">$</span><span class="bash">ping -b host</span><br><span class="hljs-meta">#</span><span class="bash">ping指定次数</span><br><span class="hljs-meta">$</span><span class="bash">ping -c 10 host</span><br><span class="hljs-meta">#</span><span class="bash">ping指定时间间隔和次数限制</span><br><span class="hljs-meta">$</span><span class="bash">ping -c 10 -i 0.5 host</span><br><span class="hljs-meta">#</span><span class="bash">通过域名ping公网上的站点</span><br></code></pre></td></tr></table></figure><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><blockquote><p>netstat</p><p>etstat命令以符号形式显示各种与网络相关的数据结构的内容。有多种输出格式，具体取决于显示信息的选项。该命令的第一种形式显示每个协议的活动套接字列表。第二种形式根据选择的选项显示其他网络数据结构之一的内容。使用第三种形式，并指定等待间隔，netstat将在配置的网络接口上连续显示有关数据包流量的信息。第四种形式显示指定协议或地址族的统计信息。如果指定了等待间隔，将显示最近间隔秒的协议信息。第五种形式显示指定协议或地址族的每个接口的统计信息。第六种形式显示mbuf（9）统计信息。第七种形式显示指定地址系列的路由表。第八种形式显示路由统计信息。</p></blockquote><p>netstat命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a或–all 显示所有连线中的Socket。<br><br>-A&lt;网络类型&gt;或–&lt;网络类型&gt; 列出该网络类型连线中的相关地址。<br><br>-c或–continuous 持续列出网络状态。<br><br>-C或–cache 显示路由器配置的快取信息。<br><br>-e或–extend 显示网络其他相关信息。<br><br>-F或–fib 显示FIB。<br><br>-g或–groups 显示多重广播功能群组组员名单。<br><br>-h或–help 在线帮助。<br><br>-i或–interfaces 显示网络界面信息表单。<br><br>-l或–listening 显示监控中的服务器的Socket。<br><br>-M或–masquerade 显示伪装的网络连线。<br><br>-n或–numeric 直接使用IP地址，而不通过域名服务器。<br><br>-N或–netlink或–symbolic 显示网络硬件外围设备的符号连接名称。<br><br>-o或–timers 显示计时器。<br><br>-p或–programs 显示正在使用Socket的程序识别码和程序名称。<br><br>-r或–route 显示Routing Table。<br><br>-s或–statistice 显示网络工作信息统计表。<br><br>-t或–tcp 显示TCP传输协议的连线状况。<br><br>-u或–udp 显示UDP传输协议的连线状况。<br><br>-v或–verbose 显示指令执行过程。<br><br>-V或–version 显示版本信息。<br><br>-w或–raw 显示RAW传输协议的连线状况。<br><br>-x或–unix 此参数的效果和指定”-A unix”参数相同。<br><br>–ip或–inet 此参数的效果和指定”-A inet”参数相同。<br></code></pre></td></tr></table></figure><p>netstat命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">列出所有端口使用情况</span><br><span class="hljs-meta">$</span><span class="bash">netstat -a</span><br><span class="hljs-meta">#</span><span class="bash">显示当前UDP连接状况</span><br><span class="hljs-meta">$</span><span class="bash">netstat -nu</span><br><span class="hljs-meta">#</span><span class="bash">显示UDP端口号的使用情况</span><br><span class="hljs-meta">$</span><span class="bash">netstat -apu</span><br><span class="hljs-meta">#</span><span class="bash">显示网卡列表</span><br><span class="hljs-meta">$</span><span class="bash">netstat -i</span><br><span class="hljs-meta">#</span><span class="bash">显示网络统计信息</span><br><span class="hljs-meta">$</span><span class="bash">netstat -s</span><br><span class="hljs-meta">#</span><span class="bash">显示监听的套接口</span><br><span class="hljs-meta">$</span><span class="bash">netstat -l</span><br><span class="hljs-meta">#</span><span class="bash">显示所有已建立的有效连接</span><br><span class="hljs-meta">$</span><span class="bash">netstat -n</span><br><span class="hljs-meta">#</span><span class="bash">显示关于路由表的信息</span><br><span class="hljs-meta">$</span><span class="bash">netstat -r</span><br><span class="hljs-meta">#</span><span class="bash">列出所有 tcp 端口</span><br><span class="hljs-meta">$</span><span class="bash">netstat -at</span><br><span class="hljs-meta">#</span><span class="bash">找出程序运行的端口</span><br><span class="hljs-meta">$</span><span class="bash">netstat -ap | grep ssh</span><br><span class="hljs-meta">#</span><span class="bash">在 netstat 输出中显示 PID 和进程名称</span><br><span class="hljs-meta">$</span><span class="bash">netstat -pt</span><br></code></pre></td></tr></table></figure><h3 id="ifconfg"><a href="#ifconfg" class="headerlink" title="ifconfg"></a>ifconfg</h3><blockquote><p>ifconfig</p><p>Ifconfig用于配置内核驻留的网络接口。它在引导时用于根据需要设置接口。之后，通常仅在调试或需要系统调整时才需要它。</p></blockquote><p>ifconfig命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell">up 启动指定网络设备/网卡。<br><br>down 关闭指定网络设备/网卡。该参数可以有效地阻止通过指定接口的IP信息流，如果想永久地关闭一个接口，我们还需要从核心路由表中将该接口的路由信息全部删除。<br><br>arp 设置指定网卡是否支持ARP协议。<br><br>-promisc 设置是否支持网卡的promiscuous模式，如果选择此参数，网卡将接收网络中发给它所有的数据包<br><br>-allmulti 设置是否支持多播模式，如果选择此参数，网卡将接收网络中所有的多播数据包<br><br>-a 显示全部接口信息<br><br>-s 显示摘要信息（类似于 netstat -i）<br><br>add 给指定网卡配置IPv6地址<br><br>del 删除指定网卡的IPv6地址<br><br>&lt;硬件地址&gt; 配置网卡最大的传输单元<br><br>mtu&lt;字节数&gt; 设置网卡的最大传输单元 (bytes)<br><br>netmask&lt;子网掩码&gt; 设置网卡的子网掩码。掩码可以是有前缀0x的32位十六进制数，也可以是用点分开的4个十进制数。如果不打算将网络分成子网，可以不管这一选项；如果要使用子网，那么请记住，网络中每一个系统必须有相同子网掩码。<br><br>tunel 建立隧道<br><br>dstaddr 设定一个远端地址，建立点对点通信<br><br>-broadcast&lt;地址&gt; 为指定网卡设置广播协议<br><br>-pointtopoint&lt;地址&gt; 为网卡设置点对点通讯协议<br><br>multicast 为网卡设置组播标志<br><br>address 为网卡设置IPv4地址<br><br>txqueuelen&lt;长度&gt; 为网卡设置传输列队的长度<br></code></pre></td></tr></table></figure><p>ifconfig常用命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">显示网络设备信息</span><br><span class="hljs-meta">$</span><span class="bash">ifconfig</span><br><span class="hljs-meta">#</span><span class="bash">启动关闭指定网卡</span><br><span class="hljs-meta">$</span><span class="bash">ifconfig eth0 up</span><br><span class="hljs-meta">$</span><span class="bash">ifconfig eth0 down</span><br><span class="hljs-meta">#</span><span class="bash">配置IP地址</span><br><span class="hljs-meta">$</span><span class="bash">ifconfig eth0 ip</span><br><span class="hljs-meta">#</span><span class="bash">启用和关闭ARP协议</span><br><span class="hljs-meta">$</span><span class="bash">ifconfig eth0 arp</span><br><span class="hljs-meta">$</span><span class="bash">ifconfig eth0 -arp</span><br><span class="hljs-meta">#</span><span class="bash">设置最大传输单元</span><br><span class="hljs-meta">$</span><span class="bash">ifconfig eth0 mtu 1500</span><br></code></pre></td></tr></table></figure><h3 id="hostname"><a href="#hostname" class="headerlink" title="hostname"></a>hostname</h3><blockquote><p>hostname</p><p>主机名用于显示系统的DNS名称，并显示或设置其主机名或NIS域名。</p></blockquote><p>hostname命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">-v：详细信息模式；<br>-a：显示主机别名；<br>-d：显示DNS域名；<br>-f：显示FQDN名称；<br>-i：显示主机的ip地址；<br>-s：显示短主机名称，在第一个点处截断；<br>-y：显示NIS域名。<br></code></pre></td></tr></table></figure><p>hostname参数示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">查看主机ip,这个命令我最推荐的一个用法就是查看主机ip，之前我一直用ifconfig</span><br><span class="hljs-meta">$</span><span class="bash">hostname -i</span> <br></code></pre></td></tr></table></figure><h3 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h3><blockquote><p>traceroute</p><p>traceroute跟踪从IP网络获取到给定主机的路由信息包。它利用IP协议的生存时间（TTL）字段并尝试从每个网关到主机的路径引发ICMP TIME_EXCEEDED响应。</p></blockquote><p>traceroute命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">-d 使用Socket层级的排错功能。<br><br>-f 设置第一个检测数据包的存活数值TTL的大小。<br><br>-F 设置勿离断位。<br><br>-g 设置来源路由网关，最多可设置8个。<br><br>-i 使用指定的网络界面送出数据包。<br><br>-I 使用ICMP回应取代UDP资料信息。<br><br>-m 设置检测数据包的最大存活数值TTL的大小。<br><br>-n 直接使用IP地址而非主机名称。<br><br>-p 设置UDP传输协议的通信端口。<br><br>-r 忽略普通的Routing Table，直接将数据包送到远端主机上。<br><br>-s 设置本地主机送出数据包的IP地址。<br><br>-t 设置检测数据包的TOS数值。<br><br>-v 详细显示指令的执行过程。<br><br>-w 设置等待远端主机回报的时间。<br><br>-x 开启或关闭数据包的正确性检验。<br></code></pre></td></tr></table></figure><p>traceroute命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">traceroute 一下百度，看下数据包的路由途径</span><br><span class="hljs-meta">$</span><span class="bash"> traceroute www.baidu.com</span><br>traceroute: Warning: www.baidu.com has multiple addresses; using 183.232.231.172<br>traceroute to www.baidu.com (183.232.231.172), 64 hops max, 52 byte packets<br> 1  192.168.0.1 (192.168.0.1)  6.059 ms  0.879 ms  0.843 ms<br> 2  192.168.1.1 (192.168.1.1)  1.305 ms  2.232 ms  2.167 ms<br> 3  10.104.0.1 (10.104.0.1)  5.085 ms  5.534 ms  4.466 ms<br> 4  221.131.253.13 (221.131.253.13)  4.633 ms  11.736 ms  4.199 ms<br> 5  117.148.181.1 (117.148.181.1)  4.544 ms *<br>    112.11.233.49 (112.11.233.49)  13.384 ms<br> 6  221.183.47.165 (221.183.47.165)  6.591 ms  6.643 ms<br>    221.183.47.161 (221.183.47.161)  5.591 ms<br> 7  * 221.183.40.225 (221.183.40.225)  27.242 ms  25.222 ms<br> 8  221.183.59.154 (221.183.59.154)  27.937 ms  27.501 ms  26.869 ms<br> 9  120.241.49.198 (120.241.49.198)  60.772 ms<br>    120.241.49.30 (120.241.49.30)  33.451 ms<br>    120.241.48.190 (120.241.48.190)  45.563 ms<br>10  * * *<br>11  * * *<br>12  * * *<br>13  * * *<br>14  * * *<br>15  * * *<br>16  * * *<br></code></pre></td></tr></table></figure><ul><li>解释</li></ul><p>记录按序列号从1开始，每行纪录就是一跳 ，每跳表示一个网关，我们看到每行有三个时间，单位是 ms，其实就是-q的默认参数。探测数据包向每个网关发送三个数据包后，网关响应后返回的时间；如果您用 traceroute -q 10 <a href="http://www.baidu.com,表示向每个网关发送10个数据包./">www.baidu.com，表示向每个网关发送10个数据包。</a></p><p>有时我们traceroute 一台主机时，会看到有一些行是以星号表示的。出现这样的情况，可能是防火墙封掉了ICMP的返回信息，所以我们得不到什么相关的数据包返回数据。</p><h3 id="route"><a href="#route" class="headerlink" title="route"></a>route</h3><blockquote><p>route</p><p>Route操纵内核的IP路由表。它的主要用途是在使用ifconfig（8）程序对其进行配置后，通过接口设置到特定主机或网络的静态路由。</p></blockquote><p>route命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">-c 显示更多信息<br><br>-n 不解析名字<br><br>-v 显示详细的处理信息<br><br>-F 显示发送信息<br><br>-C 显示路由缓存<br><br>-f 清除所有网关入口的路由表。<br><br>-p 与 add 命令一起使用时使路由具有永久性。<br><br>add:添加一条新路由。<br><br>del:删除一条路由。<br><br>-net:目标地址是一个网络。<br><br>-host:目标地址是一个主机。<br></code></pre></td></tr></table></figure><p>route命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">显示当前路由</span><br><span class="hljs-meta">$</span><span class="bash">route</span><br><span class="hljs-meta">#</span><span class="bash">屏蔽一条路由</span><br><span class="hljs-meta">$</span><span class="bash">route add -net 224.0.0.0 netmask 240.0.0.0 reject</span><br><span class="hljs-meta">#</span><span class="bash">删除路由记录</span><br><span class="hljs-meta">$</span><span class="bash">route del -net 224.0.0.0 netmask 240.0.0.0</span><br><span class="hljs-meta">#</span><span class="bash">删除和添加设置默认网关</span><br><span class="hljs-meta">$</span><span class="bash">route del default gw 192.168.0.100</span><br><span class="hljs-meta">$</span><span class="bash">route add default gw 192.168.0.100</span><br></code></pre></td></tr></table></figure><h3 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h3><blockquote><p>wget</p><p>GNU Wget是一个免费实用程序，用于从Web非交互式下载文件。它支持HTTP，HTTPS和FTP协议，以及通过HTTP代理进行检索。</p></blockquote><p>wget命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs shell">启动：<br>  -V,  --version           显示 Wget 的版本信息并退出。<br>  -h,  --help              打印此帮助。<br>  -b,  --background        启动后转入后台。<br>  -e,  --execute=COMMAND   运行一个“.wgetrc”风格的命令。<br><br>日志和输入文件：<br>  -o,  --output-file=FILE    将日志信息写入 FILE。<br>  -a,  --append-output=FILE  将信息添加至 FILE。<br>  -d,  --debug               打印大量调试信息。<br>  -q,  --quiet               安静模式 (无信息输出)。<br>  -v,  --verbose             详尽的输出 (此为默认值)。<br>  -nv, --no-verbose          关闭详尽输出，但不进入安静模式。<br>  -i,  --input-file=FILE     下载本地或外部 FILE 中的 URLs。<br>  -F,  --force-html          把输入文件当成 HTML 文件。<br>  -B,  --base=URL            解析与 URL 相关的<br>                             HTML 输入文件 (由 -i -F 选项指定)。<br>       --config=FILE         Specify config file to use.<br><br>下载：<br>  -t,  --tries=NUMBER            设置重试次数为 NUMBER (0 代表无限制)。<br>       --retry-connrefused       即使拒绝连接也是重试。<br>  -O,  --output-document=FILE    将文档写入 FILE。<br>  -nc, --no-clobber              skip downloads that would download to<br>                                 existing files (overwriting them).<br>  -c,  --continue                断点续传下载文件。<br>       --progress=TYPE           选择进度条类型。<br>  -N,  --timestamping            只获取比本地文件新的文件。<br>  --no-use-server-timestamps     不用服务器上的时间戳来设置本地文件。<br>  -S,  --server-response         打印服务器响应。<br>       --spider                  不下载任何文件。<br>  -T,  --timeout=SECONDS         将所有超时设为 SECONDS 秒。<br>       --dns-timeout=SECS        设置 DNS 查寻超时为 SECS 秒。<br>       --connect-timeout=SECS    设置连接超时为 SECS 秒。<br>       --read-timeout=SECS       设置读取超时为 SECS 秒。<br>  -w,  --wait=SECONDS            等待间隔为 SECONDS 秒。<br>       --waitretry=SECONDS       在获取文件的重试期间等待 1..SECONDS 秒。<br>       --random-wait             获取多个文件时，每次随机等待间隔<br>                                 0.5*WAIT...1.5*WAIT 秒。<br>       --no-proxy                禁止使用代理。<br>  -Q,  --quota=NUMBER            设置获取配额为 NUMBER 字节。<br>       --bind-address=ADDRESS    绑定至本地主机上的 ADDRESS (主机名或是 IP)。<br>       --limit-rate=RATE         限制下载速率为 RATE。<br>       --no-dns-cache            关闭 DNS 查寻缓存。<br>       --restrict-file-names=OS  限定文件名中的字符为 OS 允许的字符。<br>       --ignore-case             匹配文件/目录时忽略大小写。<br>  -4,  --inet4-only              仅连接至 IPv4 地址。<br>  -6,  --inet6-only              仅连接至 IPv6 地址。<br>       --prefer-family=FAMILY    首先连接至指定协议的地址<br>                                 FAMILY 为 IPv6，IPv4 或是 none。<br>       --user=USER               将 ftp 和 http 的用户名均设置为 USER。<br>       --password=PASS           将 ftp 和 http 的密码均设置为 PASS。<br>       --ask-password            提示输入密码。<br>       --no-iri                  关闭 IRI 支持。<br>       --local-encoding=ENC      IRI (国际化资源标识符) 使用 ENC 作为本地编码。<br>       --remote-encoding=ENC     使用 ENC 作为默认远程编码。<br>       --unlink                  remove file before clobber.<br><br>目录：<br>  -nd, --no-directories           不创建目录。<br>  -x,  --force-directories        强制创建目录。<br>  -nH, --no-host-directories      不要创建主目录。<br>       --protocol-directories     在目录中使用协议名称。<br>  -P,  --directory-prefix=PREFIX  以 PREFIX/... 保存文件<br>       --cut-dirs=NUMBER          忽略远程目录中 NUMBER 个目录层。<br><br>HTTP 选项：<br>       --http-user=USER        设置 http 用户名为 USER。<br>       --http-password=PASS    设置 http 密码为 PASS。<br>       --no-cache              不在服务器上缓存数据。<br>       --default-page=NAME     改变默认页<br>                               (默认页通常是“index.html”)。<br>  -E,  --adjust-extension      以合适的扩展名保存 HTML/CSS 文档。<br>       --ignore-length         忽略头部的‘Content-Length’区域。<br>       --header=STRING         在头部插入 STRING。<br>       --max-redirect          每页所允许的最大重定向。<br>       --proxy-user=USER       使用 USER 作为代理用户名。<br>       --proxy-password=PASS   使用 PASS 作为代理密码。<br>       --referer=URL           在 HTTP 请求头包含‘Referer: URL’。<br>       --save-headers          将 HTTP 头保存至文件。<br>  -U,  --user-agent=AGENT      标识为 AGENT 而不是 Wget/VERSION。<br>       --no-http-keep-alive    禁用 HTTP keep-alive (永久连接)。<br>       --no-cookies            不使用 cookies。<br>       --load-cookies=FILE     会话开始前从 FILE 中载入 cookies。<br>       --save-cookies=FILE     会话结束后保存 cookies 至 FILE。<br>       --keep-session-cookies  载入并保存会话 (非永久) cookies。<br>       --post-data=STRING      使用 POST 方式；把 STRING 作为数据发送。<br>       --post-file=FILE        使用 POST 方式；发送 FILE 内容。<br>       --content-disposition   当选中本地文件名时<br>                               允许 Content-Disposition 头部 (尚在实验)。<br>       --auth-no-challenge     发送不含服务器询问的首次等待<br>                               的基本 HTTP 验证信息。<br><br>HTTPS (SSL/TLS) 选项：<br>       --secure-protocol=PR     选择安全协议，可以是 auto、SSLv2、<br>                                SSLv3 或是 TLSv1 中的一个。<br>       --no-check-certificate   不要验证服务器的证书。<br>       --certificate=FILE       客户端证书文件。<br>       --certificate-type=TYPE  客户端证书类型，PEM 或 DER。<br>       --private-key=FILE       私钥文件。<br>       --private-key-type=TYPE  私钥文件类型，PEM 或 DER。<br>       --ca-certificate=FILE    带有一组 CA 认证的文件。<br>       --ca-directory=DIR       保存 CA 认证的哈希列表的目录。<br>       --random-file=FILE       带有生成 SSL PRNG 的随机数据的文件。<br>       --egd-file=FILE          用于命名带有随机数据的 EGD 套接字的文件。<br><br>FTP 选项：<br>       --ftp-user=USER         设置 ftp 用户名为 USER。<br>       --ftp-password=PASS     设置 ftp 密码为 PASS。<br>       --no-remove-listing     不要删除‘.listing’文件。<br>       --no-glob               不在 FTP 文件名中使用通配符展开。<br>       --no-passive-ftp        禁用“passive”传输模式。<br>       --retr-symlinks         递归目录时，获取链接的文件 (而非目录)。<br><br>递归下载：<br>  -r,  --recursive          指定递归下载。<br>  -l,  --level=NUMBER       最大递归深度 (inf 或 0 代表无限制，即全部下载)。<br>       --delete-after       下载完成后删除本地文件。<br>  -k,  --convert-links      让下载得到的 HTML 或 CSS 中的链接指向本地文件。<br>  -K,  --backup-converted   在转换文件 X 前先将它备份为 X.orig。<br>  -m,  --mirror             -N -r -l inf --no-remove-listing 的缩写形式。<br>  -p,  --page-requisites    下载所有用于显示 HTML 页面的图片之类的元素。<br>       --strict-comments    用严格方式 (SGML) 处理 HTML 注释。<br><br>递归接受/拒绝：<br>  -A,  --accept=LIST               逗号分隔的可接受的扩展名列表。<br>  -R,  --reject=LIST               逗号分隔的要拒绝的扩展名列表。<br>  -D,  --domains=LIST              逗号分隔的可接受的域列表。<br>       --exclude-domains=LIST      逗号分隔的要拒绝的域列表。<br>       --follow-ftp                跟踪 HTML 文档中的 FTP 链接。<br>       --follow-tags=LIST          逗号分隔的跟踪的 HTML 标识列表。<br>       --ignore-tags=LIST          逗号分隔的忽略的 HTML 标识列表。<br>  -H,  --span-hosts                递归时转向外部主机。<br>  -L,  --relative                  只跟踪有关系的链接。<br>  -I,  --include-directories=LIST  允许目录的列表。<br>  --trust-server-names             use the name specified by the redirection<br>                                   url last component.<br>  -X,  --exclude-directories=LIST  排除目录的列表。<br>  -np, --no-parent                 不追溯至父目录。<br></code></pre></td></tr></table></figure><p>wget常用参数示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">下载某个文件，wget 文件的地址</span><br><span class="hljs-meta">$</span><span class="bash">wget https://blog.csdn.net/qq_38646470</span><br></code></pre></td></tr></table></figure><h3 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h3><blockquote><p>vmstat</p><p>vmstat报告有关进程，内存，页面调度，块IO，陷阱，磁盘和cpu活动的信息。</p></blockquote><p>vmstat命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">-a：显示活跃和非活跃内存<br><br>-f：显示从系统启动至今的fork数量 。<br><br>-m：显示slabinfo<br><br>-n：只在开始时显示一次各字段名称。<br><br>-s：显示内存相关统计信息及多种系统活动数量。<br><br>delay：刷新时间间隔。如果不指定，只显示一条结果。<br><br>count：刷新次数。如果不指定刷新次数，但指定了刷新时间间隔，这时刷新次数为无穷。<br><br>-d：显示磁盘相关统计信息。<br><br>-p：显示指定磁盘分区统计信息<br><br>-S：使用指定单位显示。参数有 k 、K 、m 、M ，分别代表1000、1024、1000000、1048576字节（byte）。默认单位为K（1024 bytes）<br></code></pre></td></tr></table></figure><p>vmstat命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">显示虚拟内存情况</span><br><span class="hljs-meta">$</span><span class="bash"> vmstat</span><br>procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----<br> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st<br> 1  0      0 23764228 507816 36953948    0    0     3     5    0    0  1  0 98  0  0<br></code></pre></td></tr></table></figure><ul><li>解释</li></ul><p>Procs（进程）：</p><p>r: 运行队列中进程数量</p><p>b: 等待IO的进程数量</p><p>Memory（内存）：</p><p>swpd: 使用虚拟内存大小</p><p>free: 可用内存大小</p><p>buff: 用作缓冲的内存大小</p><p>cache: 用作缓存的内存大小</p><p>Swap：</p><p>si: 每秒从交换区写到内存的大小</p><p>so: 每秒写入交换区的内存大小</p><p>IO：（现在的Linux版本块的大小为1024bytes）</p><p>bi: 每秒读取的块数</p><p>bo: 每秒写入的块数</p><p>系统：</p><p>in: 每秒中断数，包括时钟中断。</p><p>cs: 每秒上下文切换数。</p><p>CPU（以百分比表示）：</p><p>us: 用户进程执行时间(user time)</p><p>sy: 系统进程执行时间(system time)</p><p>id: 空闲时间(包括IO等待时间),中央处理器的空闲时间 。以百分比表示。</p><p>wa: 等待IO时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta">#</span><span class="bash">表示在3秒时间内进行3次采样。将得到一个数据汇总他能够反映真正的系统情况。</span><br><span class="hljs-meta">$</span><span class="bash">vmstat 3 3</span><br><span class="hljs-meta">#</span><span class="bash">查看系统fork多少次</span><br><span class="hljs-meta">$</span><span class="bash"> vmstat -f</span><br>    166484246 forks<br><span class="hljs-meta">#</span><span class="bash">查看内存使用的详细信息</span><br><span class="hljs-meta">$</span><span class="bash">vmstat -s</span><br><span class="hljs-meta">#</span><span class="bash">查看磁盘的读/写</span><br><span class="hljs-meta">$</span><span class="bash">vmstat -d</span><br><span class="hljs-meta">#</span><span class="bash">查看系统的slab信息</span><br><span class="hljs-meta">$</span><span class="bash">vmstat -m</span><br></code></pre></td></tr></table></figure><h3 id="free"><a href="#free" class="headerlink" title="free"></a>free</h3><blockquote><p>free</p><p>free显示系统中可用和可用的物理内存和交换内存的总量，以及内核使用的缓冲区和高速缓存。</p></blockquote><p>free命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">-b 以Byte为单位显示内存使用情况。<br><br>-k 以KB为单位显示内存使用情况。<br><br>-m 以MB为单位显示内存使用情况。<br><br>-g  以GB为单位显示内存使用情况。<br><br>-o 不显示缓冲区调节列。<br><br>-s&lt;间隔秒数&gt; 持续观察内存使用状况。<br><br>-t 显示内存总和列。<br></code></pre></td></tr></table></figure><p>free命令示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">显示内存使用情况</span><br><span class="hljs-meta">$</span><span class="bash"> free</span><br>              total        used        free      shared  buff/cache   available<br>Mem:       65808884     4582700    23754736         684    37471448    60913052<br><span class="hljs-meta">$</span><span class="bash"> free -h</span><br>              total        used        free      shared  buff/cache   available<br>Mem:            62G        4.4G         22G        684K         35G         58G<br>Swap:            0B          0B          0B<br></code></pre></td></tr></table></figure><ul><li>解释</li></ul><p>total:总计物理内存的大小。</p><p>used:已使用多大。</p><p>free:可用有多少。</p><p>Shared:多个进程共享的内存总额。</p><p>Buffers/cached:磁盘缓存的大小。</p><p>第三行(-/+ buffers/cached):</p><p>used:已使用多大。</p><p>free:可用有多少。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">\#周期性的查询内存使用信息，5s执行一次<br><span class="hljs-meta">$</span><span class="bash"> free -s 5</span><br></code></pre></td></tr></table></figure><h3 id="top"><a href="#top" class="headerlink" title="top"></a>top</h3><blockquote><p>top</p><p>top程序提供正在运行的系统的动态实时视图。它可以显示系统摘要信息以及Linux内核当前正在管理的进程或线程的列表。所显示的系统摘要信息的类型以及为进程显示的信息的类型，顺序和大小都是用户可配置的，并且可以使配置在重新启动后保持不变。<br>    该程序为流程操作提供了一个有限的交互式界面，并为个人配置提供了更为广泛    的界面-涵盖了其操作的各个方面。尽管在本文档中始终引用top，但是您可以随意为程序命名。然后，该新名称（可能是别名）将反映在顶部的显示屏上，并在读写配置文件时使用。</p></blockquote><p>top 命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">-b 批处理<br><br>-c 显示完整的治命令<br><br>-I 忽略失效过程<br><br>-s 保密模式<br><br>-S 累积模式<br><br>-i&lt;时间&gt; 设置间隔时间<br><br>-u&lt;用户名&gt; 指定用户名<br><br>-p&lt;进程号&gt; 指定进程<br><br>-n&lt;次数&gt; 循环显示的次数<br></code></pre></td></tr></table></figure><p>top常用参数示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">top</span><br><span class="hljs-meta">$</span><span class="bash"> top</span><br>top - 00:56:07 up 149 days, 14:40,  1 user,  load average: 0.00, 0.02, 0.05<br>Tasks: 254 total,   1 running, 253 sleeping,   0 stopped,   0 zombie<br><span class="hljs-meta">%</span><span class="bash">Cpu(s):  1.4 us,  0.3 sy,  0.0 ni, 98.3 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st</span><br>KiB Mem : 65808884 total, 23749772 free,  4586160 used, 37472952 buff/cache<br>KiB Swap:        0 total,        0 free,        0 used. 60909608 avail Mem<br><br>  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND<br>24397 dongshan  20   0 17.972g 688312  13728 S   6.2  1.0   7:09.11 java<br>    1 root      20   0   42140   3684   1476 S   0.0  0.0  23:58.88 systemd<br>    2 root      20   0       0      0      0 S   0.0  0.0   0:05.47 kthreadd<br>    3 root      20   0       0      0      0 S   0.0  0.0   0:16.06 ksoftirqd/0<br>    5 root       0 -20       0      0      0 S   0.0  0.0   0:00.00 kworker/0:0H<br>    7 root      rt   0       0      0      0 S   0.0  0.0   1:27.00 migration/0<br>    8 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcu_bh<br>    9 root      20   0       0      0      0 S   0.0  0.0   0:00.00 rcuob/0<br></code></pre></td></tr></table></figure><ul><li>解释</li></ul><p><strong>第一行，任务队列信息，同 uptime 命令的执行结果，具体参数说明情况如下：</strong></p><p>00:56:07 — 当前系统时间</p><p>up 149 days, 14:40 — 系统已经运行了149天14小时40分钟（在这期间系统没有重启过的）</p><p>1users — 当前有1个用户登录系统</p><p>load average: 0.00, 0.02, 0.05 — load average后面的三个数分别是1分钟、5分钟、15分钟的负载情况。</p><p>load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。</p><p><strong>第二行，Tasks — 任务（进程）</strong></p><p>系统现在共有254个进程，其中处于运行中的有1个，253个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个。</p><p><strong>第三行，cpu状态信息</strong></p><p>%Cpu(s):  1.4 us,  0.3 sy,  0.0 ni, 98.3 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st</p><p>1.4 us — 用户空间占用CPU的百分比。</p><p>0.3 sy — 内核空间占用CPU的百分比。</p><p>0.0 ni — 改变过优先级的进程占用CPU的百分比</p><p>98.3 id — 空闲CPU百分比</p><p>0.1 wa — IO等待占用CPU的百分比</p><p>0.0 hi — 硬中断（Hardware IRQ）占用CPU的百分比</p><p>0.0 si — 软中断（Software Interrupts）占用CPU的百分比</p><p><strong>第四行,内存状态</strong></p><p>65808884 total  物理内存总量</p><p>23749772 free  使用中的内存总量</p><p>4586160 used  空闲内存总量</p><p>37472952 buff/cache  缓存的内存量</p><p><strong>第五行，swap交换分区信息</strong></p><p>0 total  交换区总量</p><p>0 use  使用的交换区总量</p><p>0 free  空闲交换区总量</p><p>60909608 avail Mem  可用交换区总量</p><p><strong>第七行以下：各进程（任务）的状态监控</strong></p><p>PID — 进程id</p><p>USER — 进程所有者</p><p>PR — 进程优先级</p><p>NI — nice值。负值表示高优先级，正值表示低优先级</p><p>VIRT — 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</p><p>RES — 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</p><p>SHR — 共享内存大小，单位kb</p><p>S — 进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</p><p>%CPU — 上次更新到现在的CPU时间占用百分比</p><p>%MEM — 进程使用的物理内存百分比</p><p>TIME+ — 进程使用的CPU时间总计，单位1/100秒</p><p>COMMAND — 进程名称（命令名/命令行）</p><h3 id="sar"><a href="#sar" class="headerlink" title="sar"></a>sar</h3><blockquote><p>sar</p><p>sar（System Activity Reporter系统活动情况报告）是目前 Linux 上最为全面的系统性能分析工具之一，可以从多方面对系统的活动进行报告，包括：文件的读写情况、 系统调用的使用情况、磁盘I/O、CPU效率、内存使用状况、进程活动及IPC有关的活动等。</p></blockquote><p>sar命令参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">-A：所有报告的总和<br><br>-u：输出CPU使用情况的统计信息<br><br>-v：输出inode、文件和其他内核表的统计信息<br><br>-d：输出每一个块设备的活动信息<br><br>-r：输出内存和交换空间的统计信息<br><br>-b：显示I/O和传送速率的统计信息<br><br>-a：文件读写情况<br><br>-c：输出进程统计信息，每秒创建的进程数<br><br>-R：输出内存页面的统计信息<br><br>-y：终端设备活动情况<br><br>-w：输出系统交换活动信息<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Idea使用</title>
    <link href="/2021/10/27/2021-10-27/"/>
    <url>/2021/10/27/2021-10-27/</url>
    
    <content type="html"><![CDATA[<p>Idea生成类和方法注释</p><span id="more"></span><h3 id="新建类注释"><a href="#新建类注释" class="headerlink" title="新建类注释"></a>新建类注释</h3><p>Settings -&gt; Editor -&gt; File and Code Templates</p><p>File选项卡 下Class 选项</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">#<span class="hljs-keyword">if</span> ($&#123;PACKAGE_NAME&#125; &amp;&amp; $&#123;PACKAGE_NAME&#125; != <span class="hljs-string">&quot;&quot;</span>)<span class="hljs-keyword">package</span> $&#123;PACKAGE_NAME&#125;;#end<br>#parse(<span class="hljs-string">&quot;File Header.java&quot;</span>)<br> <span class="hljs-comment">/**  </span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Author</span> 作者名字</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Date</span> $&#123;DATE&#125;/$&#123;TIME&#125; // 时间</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@ProjectName</span> $&#123;PROJECT_NAME&#125;// 工程名</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@ClassName</span>: $&#123;NAME&#125;// 类名</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@Description</span>: TODO// 描述</span><br><span class="hljs-comment">    */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> $</span>&#123;NAME&#125; &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="方法注释"><a href="#方法注释" class="headerlink" title="方法注释"></a>方法注释</h3><p>Settings -&gt; Editor -&gt; Live Templates</p><p>1.点击 + 号</p><p><img src="/img/markdown/image-20211027095320407.png"></p><p>2.新建一个组 MyGroup</p><p><img src="/img/markdown/image-20211027095101893.png"></p><p>3.选中刚才的组,再点击 + 号</p><p><img src="/img/markdown/image-20211027095020949.png"></p><p>4.修改<abbreviation> 选项卡</p><p><img src="/img/markdown/image-20211027095512737.png"></p><p>Template text 中内容为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">**<br>* <span class="hljs-meta">@Author</span> tho<br>* <span class="hljs-meta">@Date</span> $date$ $times$<br>$param$<br>* <span class="hljs-meta">@Return</span> $return_type$<br>* <span class="hljs-meta">@Description</span>: todo<br>*/<br></code></pre></td></tr></table></figure><p>java 中注释格式其中一种为 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-comment">/**</span><br><span class="hljs-comment">*</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><p>/x + tab 可以生成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">/ + 下面文本的内容 <br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">选择x只是个人习惯 不能选择已经存在的可以使用tab生成的内容,而x按起来比较方便,就选择 x<br>x 也可以改成任何不会冲突的命令<br>    必须使用/ + 某个指令 + 快捷键(Tab)生成<br>    不能将/ 写到下面文本中, <br>直接使用 某个指令 + 快捷键   生成的内容会有问题<br></code></pre></td></tr></table></figure><p>5.选择对应的函数来生成时间等信息</p><p><img src="/img/markdown/image-20211027100010970.png"></p><p><img src="/img/markdown/image-20211027100106443.png"></p><ul><li><p>date() 和 time() 函数idea自带 可以直接输入</p></li><li><p>param 和 return_type 选项要选择自定义脚本来显示,idea自带显示不是很好</p></li><li><p>param对应脚本(直接将以下代码贴进Expression 选项内)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JS">groovyScript(<span class="hljs-string">&quot;def result=&#x27;&#x27;; def params=\&quot;$&#123;_1&#125;\&quot;.replaceAll(&#x27;[\\\\[|\\\\]|\\\\s]&#x27;, &#x27;&#x27;).split(&#x27;,&#x27;).toList(); for(i = 0; i &lt; params.size(); i++) &#123;result+=&#x27;* @param &#x27; + params[i] + ((i &lt; params.size() - 1) ? &#x27;\\n&#x27; : &#x27;&#x27;)&#125;; return result&quot;</span>, methodParameters())<br></code></pre></td></tr></table></figure></li><li><p>return_type对应脚本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JS">groovyScript(<span class="hljs-string">&quot;def result=&#x27;&#x27;;  def params=\&quot;$&#123;_1&#125;\&quot;.replaceAll(&#x27;[\\\\[|\\\\]|\\\\s]&#x27;, &#x27;&#x27;).split(&#x27;&lt;&#x27;).toList(); for(i = 0; i &lt; params.size(); i++) &#123;if(i!=0)&#123;result+=&#x27;&lt;&#x27;;&#125;;  def p1=params[i].split(&#x27;,&#x27;).toList();  for(i2 = 0; i2 &lt; p1.size(); i2++)  &#123; def p2=p1[i2].split(&#x27;\\\\.&#x27;).toList();  result+=p2[p2.size()-1]; if(i2!=p1.size()-1)&#123;result+=&#x27;,&#x27;&#125;  &#125; ; &#125;;  return result&quot;</span>, methodReturnType())<br></code></pre></td></tr></table></figure></li></ul><p>6.点击如下按钮将模板设置配置到全局</p><p><img src="/img/markdown/image-20211027100357703.png"></p><p><img src="/img/markdown/image-20211027100412702.png"></p><p>7.之后新建的类会自动生成注释</p><p>方法上的注释 需要使用 /x + tab</p>]]></content>
    
    
    
    <tags>
      
      <tag>Idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇博客</title>
    <link href="/2021/10/26/xxx/"/>
    <url>/2021/10/26/xxx/</url>
    
    <content type="html"><![CDATA[<p>Hexo多台电脑写博客：<a href="https://www.dazhuanlan.com/frank87/topics/1040043">https://www.dazhuanlan.com/frank87/topics/1040043</a></p><span id="more"></span><h5 id="2021-10-22"><a href="#2021-10-22" class="headerlink" title="2021.10.22"></a>2021.10.22</h5><p>上传项目到github,有几个测试数据文件太大,超过了100m,push到github报错,直接删除了那几个文件</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git <span class="hljs-keyword">add</span> .<br>git status<br>git <span class="hljs-keyword">commit</span> -m <span class="hljs-string">&#x27;删除大文件&#x27;</span><br></code></pre></td></tr></table></figure><p>之后执行 <code>git push -u origin master </code>还是报错,那几个文件还是存在了本地, <code>.git</code>文件夹也是很大,保存了删除掉的文件.</p><p>重复了几次上面步骤问题依旧</p><p>解决办法:删除 <code>.git</code> 文件夹,重新</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">git</span> init<br><span class="hljs-attribute">git</span> remote add origin git@github.com:th<span class="hljs-number">66778899</span>/Algorithms<span class="hljs-number">4</span>th.git<br></code></pre></td></tr></table></figure><p>之后再进行 <code>git add . git push -m &#39;&#39; git push -u origin master </code>没有问题,成功上传项目到github</p><p>具体原因之后还需要再学习git使用</p><p>ssh默认不支持rsa了 <a href="https://silenwang.github.io/2021/10/11/ssh%E9%BB%98%E8%AE%A4%E4%B8%8D%E6%94%AF%E6%8C%81rsa%E4%BA%86/">https://silenwang.github.io/2021/10/11/ssh默认不支持rsa了/</a></p><p>配置多个git账号 : <a href="https://blog.csdn.net/q13554515812/article/details/83506172">https://blog.csdn.net/q13554515812/article/details/83506172</a></p><p>gradle使用</p><p>git基本使用 <a href="https://zhuanlan.zhihu.com/p/30044692">https://zhuanlan.zhihu.com/p/30044692</a></p><p>ssh-keygen -t rsa -C “<a href="mailto:2391415158@qq.com">2391415158@qq.com</a>“</p><p>ssh-keygen -t rsa -f ~/.ssh/id_rsa_github -C “<a href="mailto:2391415158@qq.com">2391415158@qq.com</a>“</p><p>ssh -T <a href="mailto:git@github.com">git@github.com</a> -i ~/.ssh/id_rsa_github</p><p>dev分支测试</p><p>建立新分支,需要 <code>git push -u origin dev</code> 将本地dev分支 与 远程分支建立流联系,需要在远程仓库创建对应的分支</p><p>$ git push fatal: The current branch dev has no upstream branch. To push the current branch and set the remote as upstream, use</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">git <span class="hljs-keyword">push</span> --<span class="hljs-keyword">set</span>-upstream origin dev<br></code></pre></td></tr></table></figure><p>=======</p><p>dev 和 master分支 <code>git checkout master | git checkout dev</code></p><p>会导致对应分支下的文件发生覆盖问题</p><p>master分支和 dev 分支 merge 问题</p><p>同一个文件 两分支内容不一致,先后更改 666 git分支的使用 <a href="https://zhuanlan.zhihu.com/p/137855358">https://zhuanlan.zhihu.com/p/137855358</a></p><p><a href="https://nyimac.gitee.io/about/">About - Nyima’s Blog (gitee.io)</a></p><p><a href="https://nyimac.gitee.io/about/">https://nyimac.gitee.io/about/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
